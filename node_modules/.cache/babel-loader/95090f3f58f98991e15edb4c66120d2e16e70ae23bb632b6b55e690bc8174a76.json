{"ast":null,"code":"\n\n// import React, { useState } from 'react';\n// import API from '../api';\n\n// export default function Register() {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [phone, setPhone] = useState('');\n//   const [skills, setSkills] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [cv, setCv] = useState(null);\n\n//   const handle = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const formData = new FormData();\n//       formData.append('name', name);\n//       formData.append('email', email);\n//       formData.append('password', password);\n//       formData.append('phone', phone);\n//       formData.append('skills', skills);\n//       if (image) formData.append('image', image);\n//       if (cv) formData.append('cv', cv);\n\n//       const res = await API.post('/auth/register', formData, {\n//         headers: { 'Content-Type': 'multipart/form-data' },\n//       });\n\n//       localStorage.setItem('token', res.data.token);\n//       localStorage.setItem('user', JSON.stringify(res.data.user));\n//       window.location.href = '/jobs';\n//     } catch (err) {\n//       alert(err.response?.data?.message || 'Register failed');\n//     }\n//   };\n\n//   return (\n//     <div style={styles.wrapper}>\n//       <div style={styles.navbar}>Job Tracker</div>\n\n//       <div style={styles.cardContainer}>\n//         <form onSubmit={handle} style={styles.card} encType=\"multipart/form-data\">\n//           <h2 style={styles.title}>Create an Account</h2>\n\n//           <div style={styles.row}>\n//             <div style={styles.field}>\n//               <label style={styles.label}>Full Name</label>\n//               <input\n//                 style={styles.input}\n//                 value={name}\n//                 onChange={e => setName(e.target.value)}\n//                 required\n//               />\n//             </div>\n\n//             <div style={styles.field}>\n//               <label style={styles.label}>Email</label>\n//               <input\n//                 type=\"email\"\n//                 style={styles.input}\n//                 value={email}\n//                 onChange={e => setEmail(e.target.value)}\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           <div style={styles.row}>\n//             <div style={styles.field}>\n//               <label style={styles.label}>Password</label>\n//               <input\n//                 type=\"password\"\n//                 style={styles.input}\n//                 value={password}\n//                 onChange={e => setPassword(e.target.value)}\n//                 required\n//               />\n//             </div>\n\n//             <div style={styles.field}>\n//               <label style={styles.label}>Phone</label>\n//               <input\n//                 style={styles.input}\n//                 value={phone}\n//                 onChange={e => setPhone(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div style={styles.row}>\n//             <div style={styles.field}>\n//               <label style={styles.label}>Skills (comma separated)</label>\n//               <input\n//                 style={styles.input}\n//                 value={skills}\n//                 onChange={e => setSkills(e.target.value)}\n//               />\n//             </div>\n\n//             <div style={styles.field}>\n//               <label style={styles.label}>Profile Image</label>\n//               <input\n//                 type=\"file\"\n//                 style={styles.inputFile}\n//                 accept=\"image/*\"\n//                 onChange={e => setImage(e.target.files[0])}\n//               />\n//             </div>\n//           </div>\n\n//           <div style={styles.row}>\n//             <div style={{ ...styles.field, width: '100%' }}>\n//               <label style={styles.label}>CV (optional)</label>\n//               <input\n//                 type=\"file\"\n//                 style={styles.inputFile}\n//                 accept=\".pdf,.doc,.docx\"\n//                 onChange={e => setCv(e.target.files[0])}\n//               />\n//             </div>\n//           </div>\n\n//           <button style={styles.button}>Register</button>\n\n//           <p style={styles.linkText}>\n//             Already have an account?{\" \"}\n//             <a href=\"/login\" style={styles.link}>\n//               Login here\n//             </a>\n//           </p>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Inline Styles\n// const styles = {\n//   wrapper: {\n//     minHeight: '100vh',\n//     background: 'linear-gradient(135deg, #e8d7ff 0%, #c7b2ff 100%)',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   },\n//   navbar: {\n//     width: '100%',\n//     background: '#6b3fa0',\n//     color: '#fff',\n//     padding: '15px 0',\n//     fontSize: '1.5rem',\n//     fontWeight: 'bold',\n//     textAlign: 'center',\n//     boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n//   },\n//   cardContainer: {\n//     marginTop: '50px',\n//     display: 'flex',\n//     justifyContent: 'center',\n//     width: '100%',\n//   },\n//   card: {\n//     background: '#fff',\n//     padding: '35px',\n//     borderRadius: '15px',\n//     boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\n//     width: '90%',\n//     maxWidth: '700px',\n//   },\n//   title: {\n//     textAlign: 'center',\n//     marginBottom: '25px',\n//     color: '#6b3fa0',\n//   },\n//   row: {\n//     display: 'flex',\n//     gap: '50px',\n//     flexWrap: 'wrap',\n//     marginBottom: '15px',\n//   },\n//   field: {\n//     flex: 1,\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   label: {\n//     fontWeight: 'bold',\n//     color: '#333',\n//     marginBottom: '5px',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '10px 12px',\n//     borderRadius: '8px',\n//     border: '1px solid #ccc',\n//     fontSize: '15px',\n//   },\n//   inputFile: {\n//     padding: '8px 0',\n//   },\n//   button: {\n//     width: '100%',\n//     padding: '12px',\n//     border: 'none',\n//     borderRadius: '8px',\n//     background: '#6b3fa0',\n//     color: 'white',\n//     fontWeight: 'bold',\n//     fontSize: '16px',\n//     cursor: 'pointer',\n//     marginTop: '10px',\n//     transition: 'background 0.3s ease',\n//   },\n//   linkText: {\n//     textAlign: 'center',\n//     marginTop: '15px',\n//     color: '#555',\n//   },\n//   link: {\n//     color: '#6b3fa0',\n//     textDecoration: 'none',\n//     fontWeight: 'bold',\n//   },\n// };","map":{"version":3,"names":[],"sources":["C:/Users/aswathi/Downloads/job-tracker/job-tracker/client/src/pages/Register.js"],"sourcesContent":["\n\n// import React, { useState } from 'react';\n// import API from '../api';\n\n// export default function Register() {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [phone, setPhone] = useState('');\n//   const [skills, setSkills] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [cv, setCv] = useState(null);\n\n//   const handle = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const formData = new FormData();\n//       formData.append('name', name);\n//       formData.append('email', email);\n//       formData.append('password', password);\n//       formData.append('phone', phone);\n//       formData.append('skills', skills);\n//       if (image) formData.append('image', image);\n//       if (cv) formData.append('cv', cv);\n\n//       const res = await API.post('/auth/register', formData, {\n//         headers: { 'Content-Type': 'multipart/form-data' },\n//       });\n\n//       localStorage.setItem('token', res.data.token);\n//       localStorage.setItem('user', JSON.stringify(res.data.user));\n//       window.location.href = '/jobs';\n//     } catch (err) {\n//       alert(err.response?.data?.message || 'Register failed');\n//     }\n//   };\n\n//   return (\n//     <div style={styles.wrapper}>\n//       <div style={styles.navbar}>Job Tracker</div>\n\n//       <div style={styles.cardContainer}>\n//         <form onSubmit={handle} style={styles.card} encType=\"multipart/form-data\">\n//           <h2 style={styles.title}>Create an Account</h2>\n\n//           <div style={styles.row}>\n//             <div style={styles.field}>\n//               <label style={styles.label}>Full Name</label>\n//               <input\n//                 style={styles.input}\n//                 value={name}\n//                 onChange={e => setName(e.target.value)}\n//                 required\n//               />\n//             </div>\n\n//             <div style={styles.field}>\n//               <label style={styles.label}>Email</label>\n//               <input\n//                 type=\"email\"\n//                 style={styles.input}\n//                 value={email}\n//                 onChange={e => setEmail(e.target.value)}\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           <div style={styles.row}>\n//             <div style={styles.field}>\n//               <label style={styles.label}>Password</label>\n//               <input\n//                 type=\"password\"\n//                 style={styles.input}\n//                 value={password}\n//                 onChange={e => setPassword(e.target.value)}\n//                 required\n//               />\n//             </div>\n\n//             <div style={styles.field}>\n//               <label style={styles.label}>Phone</label>\n//               <input\n//                 style={styles.input}\n//                 value={phone}\n//                 onChange={e => setPhone(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div style={styles.row}>\n//             <div style={styles.field}>\n//               <label style={styles.label}>Skills (comma separated)</label>\n//               <input\n//                 style={styles.input}\n//                 value={skills}\n//                 onChange={e => setSkills(e.target.value)}\n//               />\n//             </div>\n\n//             <div style={styles.field}>\n//               <label style={styles.label}>Profile Image</label>\n//               <input\n//                 type=\"file\"\n//                 style={styles.inputFile}\n//                 accept=\"image/*\"\n//                 onChange={e => setImage(e.target.files[0])}\n//               />\n//             </div>\n//           </div>\n\n//           <div style={styles.row}>\n//             <div style={{ ...styles.field, width: '100%' }}>\n//               <label style={styles.label}>CV (optional)</label>\n//               <input\n//                 type=\"file\"\n//                 style={styles.inputFile}\n//                 accept=\".pdf,.doc,.docx\"\n//                 onChange={e => setCv(e.target.files[0])}\n//               />\n//             </div>\n//           </div>\n\n//           <button style={styles.button}>Register</button>\n\n//           <p style={styles.linkText}>\n//             Already have an account?{\" \"}\n//             <a href=\"/login\" style={styles.link}>\n//               Login here\n//             </a>\n//           </p>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Inline Styles\n// const styles = {\n//   wrapper: {\n//     minHeight: '100vh',\n//     background: 'linear-gradient(135deg, #e8d7ff 0%, #c7b2ff 100%)',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   },\n//   navbar: {\n//     width: '100%',\n//     background: '#6b3fa0',\n//     color: '#fff',\n//     padding: '15px 0',\n//     fontSize: '1.5rem',\n//     fontWeight: 'bold',\n//     textAlign: 'center',\n//     boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n//   },\n//   cardContainer: {\n//     marginTop: '50px',\n//     display: 'flex',\n//     justifyContent: 'center',\n//     width: '100%',\n//   },\n//   card: {\n//     background: '#fff',\n//     padding: '35px',\n//     borderRadius: '15px',\n//     boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\n//     width: '90%',\n//     maxWidth: '700px',\n//   },\n//   title: {\n//     textAlign: 'center',\n//     marginBottom: '25px',\n//     color: '#6b3fa0',\n//   },\n//   row: {\n//     display: 'flex',\n//     gap: '50px',\n//     flexWrap: 'wrap',\n//     marginBottom: '15px',\n//   },\n//   field: {\n//     flex: 1,\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   label: {\n//     fontWeight: 'bold',\n//     color: '#333',\n//     marginBottom: '5px',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '10px 12px',\n//     borderRadius: '8px',\n//     border: '1px solid #ccc',\n//     fontSize: '15px',\n//   },\n//   inputFile: {\n//     padding: '8px 0',\n//   },\n//   button: {\n//     width: '100%',\n//     padding: '12px',\n//     border: 'none',\n//     borderRadius: '8px',\n//     background: '#6b3fa0',\n//     color: 'white',\n//     fontWeight: 'bold',\n//     fontSize: '16px',\n//     cursor: 'pointer',\n//     marginTop: '10px',\n//     transition: 'background 0.3s ease',\n//   },\n//   linkText: {\n//     textAlign: 'center',\n//     marginTop: '15px',\n//     color: '#555',\n//   },\n//   link: {\n//     color: '#6b3fa0',\n//     textDecoration: 'none',\n//     fontWeight: 'bold',\n//   },\n// };\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}