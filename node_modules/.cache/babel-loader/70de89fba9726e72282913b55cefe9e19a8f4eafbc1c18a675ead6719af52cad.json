{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function JobList() {\n//   const [jobs, setJobs] = useState([]);\n//   const [companies, setCompanies] = useState([]);\n\n//   // form states\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [companyId, setCompanyId] = useState(\"\");\n//   const [location, setLocation] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [type, setType] = useState(\"\");\n//   const [skills, setSkills] = useState([]);\n\n//   // dialog visibility\n//   const [showDialog, setShowDialog] = useState(false);\n\n//   const availableSkills = [\n//     \"HTML\",\n//     \"CSS\",\n//     \"JavaScript\",\n//     \"React\",\n//     \"Node.js\",\n//     \"Express\",\n//     \"MongoDB\",\n//     \"Python\",\n//     \"Java\",\n//     \"C++\",\n//   ];\n\n//   const fetchJobs = async () => {\n//     const res = await API.get(\"/jobs\");\n//     setJobs(res.data);\n//   };\n\n//   const fetchCompanies = async () => {\n//     const res = await API.get(\"/companies\");\n//     setCompanies(res.data);\n//   };\n\n//   useEffect(() => {\n//     fetchJobs();\n//     fetchCompanies();\n//   }, []);\n\n//   const handleAdd = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await API.post(\"/jobs\", {\n//         title,\n//         description,\n//         companyId,\n//         location,\n//         category,\n//         type,\n//         skills,\n//       });\n\n//       // reset\n//       setTitle(\"\");\n//       setDescription(\"\");\n//       setCompanyId(\"\");\n//       setLocation(\"\");\n//       setCategory(\"\");\n//       setType(\"\");\n//       setSkills([]);\n\n//       setShowDialog(false);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(err.response?.data?.message || \"Add job failed\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this job?\")) {\n//       await API.delete(`/jobs/${id}`);\n//       fetchJobs();\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2 style={styles.heading}>Job Management</h2>\n\n//       <div style={styles.topBar}>\n//         <button style={styles.addBtn} onClick={() => setShowDialog(true)}>\n//           + Add Job\n//         </button>\n//       </div>\n\n//       <table style={styles.table}>\n//         <thead style={{ background: \"#ede4ff\" }}>\n//           <tr>\n//             <th style={styles.th}>Title</th>\n//             <th style={styles.th}>Description</th>\n//             <th style={styles.th}>Company</th>\n//             <th style={styles.th}>Location</th>\n//             <th style={styles.th}>Category</th>\n//             <th style={styles.th}>Type</th>\n//             <th style={styles.th}>Skills</th>\n//             <th style={styles.th}>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {jobs.map((j) => (\n//             <tr key={j._id} style={styles.tr}>\n//               <td style={styles.td}>{j.title}</td>\n//               <td style={styles.td}>{j.description}</td>\n//               <td style={styles.td}>{j.company?.name}</td>\n//               <td style={styles.td}>{j.location}</td>\n//               <td style={styles.td}>{j.category}</td>\n//               <td style={styles.td}>{j.type}</td>\n//               <td style={styles.td}>{j.skills?.join(\", \")}</td>\n//               <td style={styles.td}>\n//                 <button\n//                   onClick={() => handleDelete(j._id)}\n//                   style={styles.deleteBtn}\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Dialog box */}\n//       {showDialog && (\n//         <div style={styles.overlay}>\n//           <div style={styles.dialog}>\n//             <h3 style={styles.dialogTitle}>Add New Job</h3>\n//             <form onSubmit={handleAdd} style={styles.form}>\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Title</label>\n//                   <input\n//                     style={styles.input}\n//                     value={title}\n//                     onChange={(e) => setTitle(e.target.value)}\n//                     required\n//                   />\n//                 </div>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Description</label>\n//                   <input\n//                     style={styles.input}\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                     required\n//                   />\n//                 </div>\n//               </div>\n\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Company</label>\n//                   <select\n//                     style={styles.input}\n//                     value={companyId}\n//                     onChange={(e) => setCompanyId(e.target.value)}\n//                     required\n//                   >\n//                     <option value=\"\">Select Company</option>\n//                     {companies.map((c) => (\n//                       <option key={c._id} value={c._id}>\n//                         {c.name}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Location</label>\n//                   <input\n//                     style={styles.input}\n//                     value={location}\n//                     onChange={(e) => setLocation(e.target.value)}\n//                   />\n//                 </div>\n//               </div>\n\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Category</label>\n//                   <input\n//                     style={styles.input}\n//                     value={category}\n//                     onChange={(e) => setCategory(e.target.value)}\n//                   />\n//                 </div>\n\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Job Type</label>\n//                   <select\n//                     style={styles.input}\n//                     value={type}\n//                     onChange={(e) => setType(e.target.value)}\n//                     required\n//                   >\n//                     <option value=\"\">Select Type</option>\n//                     <option value=\"full-time\">Full-Time</option>\n//                     <option value=\"part-time\">Part-Time</option>\n//                     <option value=\"internship\">Internship</option>\n//                   </select>\n//                 </div>\n//               </div>\n\n//               <div style={styles.field}>\n//                 <label style={styles.label}>Required Skills</label>\n//                 <select\n//                   multiple\n//                   style={styles.multiselect}\n//                   value={skills}\n//                   onChange={(e) =>\n//                     setSkills(\n//                       Array.from(e.target.selectedOptions, (opt) => opt.value)\n//                     )\n//                   }\n//                 >\n//                   {availableSkills.map((skill) => (\n//                     <option key={skill} value={skill}>\n//                       {skill}\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <small style={{ color: \"#555\" }}>\n//                   Hold Ctrl (Windows) or Cmd (Mac) to select multiple\n//                 </small>\n//               </div>\n\n//               <div style={styles.btnRow}>\n//                 <button type=\"submit\" style={styles.saveBtn}>\n//                   Save\n//                 </button>\n//                 <button\n//                   type=\"button\"\n//                   style={styles.cancelBtn}\n//                   onClick={() => setShowDialog(false)}\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\n//   heading: { color: \"#6b3fa0\", textAlign: \"center\" },\n//   topBar: {\n//     display: \"flex\",\n//     justifyContent: \"flex-end\",\n//     marginBottom: \"20px\",\n//   },\n//   addBtn: {\n//     background: \"#6b3fa0\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   table: { width: \"100%\", borderCollapse: \"collapse\" },\n//   th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\n//   td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\n//   tr: { textAlign: \"center\" },\n//   deleteBtn: {\n//     background: \"#ff4d4f\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"5px 10px\",\n//     borderRadius: \"6px\",\n//     cursor: \"pointer\",\n//   },\n//   overlay: {\n//     position: \"fixed\",\n//     top: 0,\n//     left: 0,\n//     width: \"100vw\",\n//     height: \"100vh\",\n//     background: \"rgba(0,0,0,0.5)\",\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//   },\n//   dialog: {\n//     background: \"white\",\n//     padding: \"25px\",\n//     borderRadius: \"12px\",\n//     width: \"600px\",\n//     maxHeight: \"90vh\",\n//     overflowY: \"auto\",\n//   },\n//   dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\n//   form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\n//   row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\n//   field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\n//   label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\n//   input: {\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     fontSize: \"14px\",\n//   },\n//   multiselect: {\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     height: \"100px\",\n//     fontSize: \"14px\",\n//   },\n//   btnRow: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     marginTop: \"10px\",\n//   },\n//   saveBtn: {\n//     background: \"#6b3fa0\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   cancelBtn: {\n//     background: \"#ccc\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n// };\n\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function JobList() {\n//   const [jobs, setJobs] = useState([]);\n//   const [companies, setCompanies] = useState([]);\n//   const [availableSkills] = useState([\n//     \"HTML\", \"CSS\", \"JavaScript\", \"React\", \"Node.js\",\n//     \"Express\", \"MongoDB\", \"Python\", \"Java\", \"C++\",\n//   ]);\n\n//   // form states\n//   const [form, setForm] = useState({\n//     title: \"\",\n//     description: \"\",\n//     companyId: \"\",\n//     location: \"\",\n//     category: \"\",\n//     type: \"\",\n//     skills: [],\n//   });\n\n//   const [editingJob, setEditingJob] = useState(null);\n//   const [showDialog, setShowDialog] = useState(false);\n\n//   useEffect(() => {\n//     fetchJobs();\n//     fetchCompanies();\n//   }, []);\n\n//   const fetchJobs = async () => {\n//     const res = await API.get(\"/jobs\");\n//     setJobs(res.data);\n//   };\n\n//   const fetchCompanies = async () => {\n//     const res = await API.get(\"/companies\");\n//     setCompanies(res.data);\n//   };\n\n//   const openDialog = (job = null) => {\n//     if (job) {\n//       setEditingJob(job);\n//       setForm({\n//         title: job.title,\n//         description: job.description,\n//         companyId: job.company?._id || \"\",\n//         location: job.location || \"\",\n//         category: job.category || \"\",\n//         type: job.type || \"\",\n//         skills: job.skills || [],\n//       });\n//     } else {\n//       setEditingJob(null);\n//       setForm({\n//         title: \"\",\n//         description: \"\",\n//         companyId: \"\",\n//         location: \"\",\n//         category: \"\",\n//         type: \"\",\n//         skills: [],\n//       });\n//     }\n//     setShowDialog(true);\n//   };\n\n//   const handleChange = (key, value) => {\n//     setForm((prev) => ({ ...prev, [key]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editingJob) {\n//         await API.patch(`/jobs/${editingJob._id}`, form);\n//         alert(\"Job updated successfully!\");\n//       } else {\n//         await API.post(\"/jobs\", form);\n//         alert(\"Job added successfully!\");\n//       }\n//       setShowDialog(false);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(err.response?.data?.message || \"Error saving job\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this job?\")) {\n//       await API.delete(`/jobs/${id}`);\n//       alert(\"Job deleted successfully!\");\n//       fetchJobs();\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2 style={styles.heading}>Job Management</h2>\n\n//       <div style={styles.topBar}>\n//         <button style={styles.addBtn} onClick={() => openDialog()}>\n//           + Add Job\n//         </button>\n//       </div>\n\n//       <table style={styles.table}>\n//         <thead style={{ background: \"#ede4ff\" }}>\n//           <tr>\n//             <th style={styles.th}>Title</th>\n//             <th style={styles.th}>Description</th>\n//             <th style={styles.th}>Company</th>\n//             <th style={styles.th}>Location</th>\n//             <th style={styles.th}>Category</th>\n//             <th style={styles.th}>Type</th>\n//             <th style={styles.th}>Skills</th>\n//             <th style={styles.th}>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {jobs.map((j) => (\n//             <tr key={j._id} style={styles.tr}>\n//               <td style={styles.td}>{j.title}</td>\n//               <td style={styles.td}>{j.description}</td>\n//               <td style={styles.td}>{j.company?.name}</td>\n//               <td style={styles.td}>{j.location}</td>\n//               <td style={styles.td}>{j.category}</td>\n//               <td style={styles.td}>{j.type}</td>\n//               <td style={styles.td}>{j.skills?.join(\", \")}</td>\n//               <td style={styles.td}>\n//                 <button\n//                   onClick={() => openDialog(j)}\n//                   style={styles.editBtn}\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => handleDelete(j._id)}\n//                   style={styles.deleteBtn}\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Dialog */}\n//       {showDialog && (\n//         <div style={styles.overlay}>\n//           <div style={styles.dialog}>\n//             <h3 style={styles.dialogTitle}>\n//               {editingJob ? \"Edit Job\" : \"Add New Job\"}\n//             </h3>\n//             <form onSubmit={handleSubmit} style={styles.form}>\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Title</label>\n//                   <input\n//                     style={styles.input}\n//                     value={form.title}\n//                     onChange={(e) => handleChange(\"title\", e.target.value)}\n//                     required\n//                   />\n//                 </div>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Description</label>\n//                   <input\n//                     style={styles.input}\n//                     value={form.description}\n//                     onChange={(e) =>\n//                       handleChange(\"description\", e.target.value)\n//                     }\n//                     required\n//                   />\n//                 </div>\n//               </div>\n\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Company</label>\n//                   <select\n//                     style={styles.input}\n//                     value={form.companyId}\n//                     onChange={(e) =>\n//                       handleChange(\"companyId\", e.target.value)\n//                     }\n//                     required\n//                   >\n//                     <option value=\"\">Select Company</option>\n//                     {companies.map((c) => (\n//                       <option key={c._id} value={c._id}>\n//                         {c.name}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Location</label>\n//                   <input\n//                     style={styles.input}\n//                     value={form.location}\n//                     onChange={(e) => handleChange(\"location\", e.target.value)}\n//                   />\n//                 </div>\n//               </div>\n\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Category</label>\n//                   <input\n//                     style={styles.input}\n//                     value={form.category}\n//                     onChange={(e) => handleChange(\"category\", e.target.value)}\n//                   />\n//                 </div>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Job Type</label>\n//                   <select\n//                     style={styles.input}\n//                     value={form.type}\n//                     onChange={(e) => handleChange(\"type\", e.target.value)}\n//                   >\n//                     <option value=\"\">Select Type</option>\n//                     <option value=\"full-time\">Full-Time</option>\n//                     <option value=\"part-time\">Part-Time</option>\n//                     <option value=\"internship\">Internship</option>\n//                   </select>\n//                 </div>\n//               </div>\n\n//               <div style={styles.field}>\n//                 <label style={styles.label}>Required Skills</label>\n//                 <select\n//                   multiple\n//                   style={styles.multiselect}\n//                   value={form.skills}\n//                   onChange={(e) =>\n//                     handleChange(\n//                       \"skills\",\n//                       Array.from(e.target.selectedOptions, (opt) => opt.value)\n//                     )\n//                   }\n//                 >\n//                   {availableSkills.map((skill) => (\n//                     <option key={skill} value={skill}>\n//                       {skill}\n//                     </option>\n//                   ))}\n//                 </select>\n//               </div>\n\n//               <div style={styles.btnRow}>\n//                 <button type=\"submit\" style={styles.saveBtn}>\n//                   {editingJob ? \"Update\" : \"Save\"}\n//                 </button>\n//                 <button\n//                   type=\"button\"\n//                   style={styles.cancelBtn}\n//                   onClick={() => setShowDialog(false)}\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\n//   heading: { color: \"#6b3fa0\", textAlign: \"center\" },\n//   topBar: {\n//     display: \"flex\",\n//     justifyContent: \"flex-end\",\n//     marginBottom: \"20px\",\n//   },\n//   addBtn: {\n//     background: \"#6b3fa0\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   editBtn: {\n//     background: \"#4caf50\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"6px 10px\",\n//     borderRadius: \"6px\",\n//     marginRight: \"5px\",\n//     cursor: \"pointer\",\n//   },\n//   deleteBtn: {\n//     background: \"#ff4d4f\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"6px 10px\",\n//     borderRadius: \"6px\",\n//     cursor: \"pointer\",\n//   },\n//   table: { width: \"100%\", borderCollapse: \"collapse\" },\n//   th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\n//   td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\n//   tr: { textAlign: \"center\" },\n//   overlay: {\n//     position: \"fixed\",\n//     top: 0,\n//     left: 0,\n//     width: \"100vw\",\n//     height: \"100vh\",\n//     background: \"rgba(0,0,0,0.5)\",\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//   },\n//   dialog: {\n//     background: \"white\",\n//     padding: \"25px\",\n//     borderRadius: \"12px\",\n//     width: \"600px\",\n//     maxHeight: \"90vh\",\n//     overflowY: \"auto\",\n//   },\n//   dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\n//   form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\n//   row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\n//   field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\n//   label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\n//   input: {\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     fontSize: \"14px\",\n//   },\n//   multiselect: {\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     height: \"100px\",\n//     fontSize: \"14px\",\n//   },\n//   btnRow: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     marginTop: \"10px\",\n//   },\n//   saveBtn: {\n//     background: \"#6b3fa0\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   cancelBtn: {\n//     background: \"#ccc\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n// };","map":{"version":3,"names":[],"sources":["C:/Users/aswathi/Downloads/job-tracker/job-tracker/client/src/components/JobList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n\r\n// export default function JobList() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [companies, setCompanies] = useState([]);\r\n\r\n//   // form states\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [companyId, setCompanyId] = useState(\"\");\r\n//   const [location, setLocation] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [type, setType] = useState(\"\");\r\n//   const [skills, setSkills] = useState([]);\r\n\r\n//   // dialog visibility\r\n//   const [showDialog, setShowDialog] = useState(false);\r\n\r\n//   const availableSkills = [\r\n//     \"HTML\",\r\n//     \"CSS\",\r\n//     \"JavaScript\",\r\n//     \"React\",\r\n//     \"Node.js\",\r\n//     \"Express\",\r\n//     \"MongoDB\",\r\n//     \"Python\",\r\n//     \"Java\",\r\n//     \"C++\",\r\n//   ];\r\n\r\n//   const fetchJobs = async () => {\r\n//     const res = await API.get(\"/jobs\");\r\n//     setJobs(res.data);\r\n//   };\r\n\r\n//   const fetchCompanies = async () => {\r\n//     const res = await API.get(\"/companies\");\r\n//     setCompanies(res.data);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchJobs();\r\n//     fetchCompanies();\r\n//   }, []);\r\n\r\n//   const handleAdd = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await API.post(\"/jobs\", {\r\n//         title,\r\n//         description,\r\n//         companyId,\r\n//         location,\r\n//         category,\r\n//         type,\r\n//         skills,\r\n//       });\r\n\r\n//       // reset\r\n//       setTitle(\"\");\r\n//       setDescription(\"\");\r\n//       setCompanyId(\"\");\r\n//       setLocation(\"\");\r\n//       setCategory(\"\");\r\n//       setType(\"\");\r\n//       setSkills([]);\r\n\r\n//       setShowDialog(false);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(err.response?.data?.message || \"Add job failed\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this job?\")) {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       fetchJobs();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2 style={styles.heading}>Job Management</h2>\r\n\r\n//       <div style={styles.topBar}>\r\n//         <button style={styles.addBtn} onClick={() => setShowDialog(true)}>\r\n//           + Add Job\r\n//         </button>\r\n//       </div>\r\n\r\n//       <table style={styles.table}>\r\n//         <thead style={{ background: \"#ede4ff\" }}>\r\n//           <tr>\r\n//             <th style={styles.th}>Title</th>\r\n//             <th style={styles.th}>Description</th>\r\n//             <th style={styles.th}>Company</th>\r\n//             <th style={styles.th}>Location</th>\r\n//             <th style={styles.th}>Category</th>\r\n//             <th style={styles.th}>Type</th>\r\n//             <th style={styles.th}>Skills</th>\r\n//             <th style={styles.th}>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {jobs.map((j) => (\r\n//             <tr key={j._id} style={styles.tr}>\r\n//               <td style={styles.td}>{j.title}</td>\r\n//               <td style={styles.td}>{j.description}</td>\r\n//               <td style={styles.td}>{j.company?.name}</td>\r\n//               <td style={styles.td}>{j.location}</td>\r\n//               <td style={styles.td}>{j.category}</td>\r\n//               <td style={styles.td}>{j.type}</td>\r\n//               <td style={styles.td}>{j.skills?.join(\", \")}</td>\r\n//               <td style={styles.td}>\r\n//                 <button\r\n//                   onClick={() => handleDelete(j._id)}\r\n//                   style={styles.deleteBtn}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Dialog box */}\r\n//       {showDialog && (\r\n//         <div style={styles.overlay}>\r\n//           <div style={styles.dialog}>\r\n//             <h3 style={styles.dialogTitle}>Add New Job</h3>\r\n//             <form onSubmit={handleAdd} style={styles.form}>\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Title</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={title}\r\n//                     onChange={(e) => setTitle(e.target.value)}\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Description</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={description}\r\n//                     onChange={(e) => setDescription(e.target.value)}\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Company</label>\r\n//                   <select\r\n//                     style={styles.input}\r\n//                     value={companyId}\r\n//                     onChange={(e) => setCompanyId(e.target.value)}\r\n//                     required\r\n//                   >\r\n//                     <option value=\"\">Select Company</option>\r\n//                     {companies.map((c) => (\r\n//                       <option key={c._id} value={c._id}>\r\n//                         {c.name}\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Location</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={location}\r\n//                     onChange={(e) => setLocation(e.target.value)}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Category</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={category}\r\n//                     onChange={(e) => setCategory(e.target.value)}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Job Type</label>\r\n//                   <select\r\n//                     style={styles.input}\r\n//                     value={type}\r\n//                     onChange={(e) => setType(e.target.value)}\r\n//                     required\r\n//                   >\r\n//                     <option value=\"\">Select Type</option>\r\n//                     <option value=\"full-time\">Full-Time</option>\r\n//                     <option value=\"part-time\">Part-Time</option>\r\n//                     <option value=\"internship\">Internship</option>\r\n//                   </select>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.field}>\r\n//                 <label style={styles.label}>Required Skills</label>\r\n//                 <select\r\n//                   multiple\r\n//                   style={styles.multiselect}\r\n//                   value={skills}\r\n//                   onChange={(e) =>\r\n//                     setSkills(\r\n//                       Array.from(e.target.selectedOptions, (opt) => opt.value)\r\n//                     )\r\n//                   }\r\n//                 >\r\n//                   {availableSkills.map((skill) => (\r\n//                     <option key={skill} value={skill}>\r\n//                       {skill}\r\n//                     </option>\r\n//                   ))}\r\n//                 </select>\r\n//                 <small style={{ color: \"#555\" }}>\r\n//                   Hold Ctrl (Windows) or Cmd (Mac) to select multiple\r\n//                 </small>\r\n//               </div>\r\n\r\n//               <div style={styles.btnRow}>\r\n//                 <button type=\"submit\" style={styles.saveBtn}>\r\n//                   Save\r\n//                 </button>\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   style={styles.cancelBtn}\r\n//                   onClick={() => setShowDialog(false)}\r\n//                 >\r\n//                   Cancel\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const styles = {\r\n//   container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\r\n//   heading: { color: \"#6b3fa0\", textAlign: \"center\" },\r\n//   topBar: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"flex-end\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   addBtn: {\r\n//     background: \"#6b3fa0\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   table: { width: \"100%\", borderCollapse: \"collapse\" },\r\n//   th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\r\n//   td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\r\n//   tr: { textAlign: \"center\" },\r\n//   deleteBtn: {\r\n//     background: \"#ff4d4f\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"5px 10px\",\r\n//     borderRadius: \"6px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   overlay: {\r\n//     position: \"fixed\",\r\n//     top: 0,\r\n//     left: 0,\r\n//     width: \"100vw\",\r\n//     height: \"100vh\",\r\n//     background: \"rgba(0,0,0,0.5)\",\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n//   dialog: {\r\n//     background: \"white\",\r\n//     padding: \"25px\",\r\n//     borderRadius: \"12px\",\r\n//     width: \"600px\",\r\n//     maxHeight: \"90vh\",\r\n//     overflowY: \"auto\",\r\n//   },\r\n//   dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\r\n//   form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\r\n//   row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\r\n//   field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\r\n//   label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n//   multiselect: {\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     height: \"100px\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n//   btnRow: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     marginTop: \"10px\",\r\n//   },\r\n//   saveBtn: {\r\n//     background: \"#6b3fa0\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   cancelBtn: {\r\n//     background: \"#ccc\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n// };\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n\r\n// export default function JobList() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [companies, setCompanies] = useState([]);\r\n//   const [availableSkills] = useState([\r\n//     \"HTML\", \"CSS\", \"JavaScript\", \"React\", \"Node.js\",\r\n//     \"Express\", \"MongoDB\", \"Python\", \"Java\", \"C++\",\r\n//   ]);\r\n\r\n//   // form states\r\n//   const [form, setForm] = useState({\r\n//     title: \"\",\r\n//     description: \"\",\r\n//     companyId: \"\",\r\n//     location: \"\",\r\n//     category: \"\",\r\n//     type: \"\",\r\n//     skills: [],\r\n//   });\r\n\r\n//   const [editingJob, setEditingJob] = useState(null);\r\n//   const [showDialog, setShowDialog] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchJobs();\r\n//     fetchCompanies();\r\n//   }, []);\r\n\r\n//   const fetchJobs = async () => {\r\n//     const res = await API.get(\"/jobs\");\r\n//     setJobs(res.data);\r\n//   };\r\n\r\n//   const fetchCompanies = async () => {\r\n//     const res = await API.get(\"/companies\");\r\n//     setCompanies(res.data);\r\n//   };\r\n\r\n//   const openDialog = (job = null) => {\r\n//     if (job) {\r\n//       setEditingJob(job);\r\n//       setForm({\r\n//         title: job.title,\r\n//         description: job.description,\r\n//         companyId: job.company?._id || \"\",\r\n//         location: job.location || \"\",\r\n//         category: job.category || \"\",\r\n//         type: job.type || \"\",\r\n//         skills: job.skills || [],\r\n//       });\r\n//     } else {\r\n//       setEditingJob(null);\r\n//       setForm({\r\n//         title: \"\",\r\n//         description: \"\",\r\n//         companyId: \"\",\r\n//         location: \"\",\r\n//         category: \"\",\r\n//         type: \"\",\r\n//         skills: [],\r\n//       });\r\n//     }\r\n//     setShowDialog(true);\r\n//   };\r\n\r\n//   const handleChange = (key, value) => {\r\n//     setForm((prev) => ({ ...prev, [key]: value }));\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       if (editingJob) {\r\n//         await API.patch(`/jobs/${editingJob._id}`, form);\r\n//         alert(\"Job updated successfully!\");\r\n//       } else {\r\n//         await API.post(\"/jobs\", form);\r\n//         alert(\"Job added successfully!\");\r\n//       }\r\n//       setShowDialog(false);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(err.response?.data?.message || \"Error saving job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this job?\")) {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       alert(\"Job deleted successfully!\");\r\n//       fetchJobs();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2 style={styles.heading}>Job Management</h2>\r\n\r\n//       <div style={styles.topBar}>\r\n//         <button style={styles.addBtn} onClick={() => openDialog()}>\r\n//           + Add Job\r\n//         </button>\r\n//       </div>\r\n\r\n//       <table style={styles.table}>\r\n//         <thead style={{ background: \"#ede4ff\" }}>\r\n//           <tr>\r\n//             <th style={styles.th}>Title</th>\r\n//             <th style={styles.th}>Description</th>\r\n//             <th style={styles.th}>Company</th>\r\n//             <th style={styles.th}>Location</th>\r\n//             <th style={styles.th}>Category</th>\r\n//             <th style={styles.th}>Type</th>\r\n//             <th style={styles.th}>Skills</th>\r\n//             <th style={styles.th}>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {jobs.map((j) => (\r\n//             <tr key={j._id} style={styles.tr}>\r\n//               <td style={styles.td}>{j.title}</td>\r\n//               <td style={styles.td}>{j.description}</td>\r\n//               <td style={styles.td}>{j.company?.name}</td>\r\n//               <td style={styles.td}>{j.location}</td>\r\n//               <td style={styles.td}>{j.category}</td>\r\n//               <td style={styles.td}>{j.type}</td>\r\n//               <td style={styles.td}>{j.skills?.join(\", \")}</td>\r\n//               <td style={styles.td}>\r\n//                 <button\r\n//                   onClick={() => openDialog(j)}\r\n//                   style={styles.editBtn}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleDelete(j._id)}\r\n//                   style={styles.deleteBtn}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Dialog */}\r\n//       {showDialog && (\r\n//         <div style={styles.overlay}>\r\n//           <div style={styles.dialog}>\r\n//             <h3 style={styles.dialogTitle}>\r\n//               {editingJob ? \"Edit Job\" : \"Add New Job\"}\r\n//             </h3>\r\n//             <form onSubmit={handleSubmit} style={styles.form}>\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Title</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={form.title}\r\n//                     onChange={(e) => handleChange(\"title\", e.target.value)}\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Description</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={form.description}\r\n//                     onChange={(e) =>\r\n//                       handleChange(\"description\", e.target.value)\r\n//                     }\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Company</label>\r\n//                   <select\r\n//                     style={styles.input}\r\n//                     value={form.companyId}\r\n//                     onChange={(e) =>\r\n//                       handleChange(\"companyId\", e.target.value)\r\n//                     }\r\n//                     required\r\n//                   >\r\n//                     <option value=\"\">Select Company</option>\r\n//                     {companies.map((c) => (\r\n//                       <option key={c._id} value={c._id}>\r\n//                         {c.name}\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Location</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={form.location}\r\n//                     onChange={(e) => handleChange(\"location\", e.target.value)}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Category</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={form.category}\r\n//                     onChange={(e) => handleChange(\"category\", e.target.value)}\r\n//                   />\r\n//                 </div>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Job Type</label>\r\n//                   <select\r\n//                     style={styles.input}\r\n//                     value={form.type}\r\n//                     onChange={(e) => handleChange(\"type\", e.target.value)}\r\n//                   >\r\n//                     <option value=\"\">Select Type</option>\r\n//                     <option value=\"full-time\">Full-Time</option>\r\n//                     <option value=\"part-time\">Part-Time</option>\r\n//                     <option value=\"internship\">Internship</option>\r\n//                   </select>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.field}>\r\n//                 <label style={styles.label}>Required Skills</label>\r\n//                 <select\r\n//                   multiple\r\n//                   style={styles.multiselect}\r\n//                   value={form.skills}\r\n//                   onChange={(e) =>\r\n//                     handleChange(\r\n//                       \"skills\",\r\n//                       Array.from(e.target.selectedOptions, (opt) => opt.value)\r\n//                     )\r\n//                   }\r\n//                 >\r\n//                   {availableSkills.map((skill) => (\r\n//                     <option key={skill} value={skill}>\r\n//                       {skill}\r\n//                     </option>\r\n//                   ))}\r\n//                 </select>\r\n//               </div>\r\n\r\n//               <div style={styles.btnRow}>\r\n//                 <button type=\"submit\" style={styles.saveBtn}>\r\n//                   {editingJob ? \"Update\" : \"Save\"}\r\n//                 </button>\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   style={styles.cancelBtn}\r\n//                   onClick={() => setShowDialog(false)}\r\n//                 >\r\n//                   Cancel\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const styles = {\r\n//   container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\r\n//   heading: { color: \"#6b3fa0\", textAlign: \"center\" },\r\n//   topBar: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"flex-end\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   addBtn: {\r\n//     background: \"#6b3fa0\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   editBtn: {\r\n//     background: \"#4caf50\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"6px 10px\",\r\n//     borderRadius: \"6px\",\r\n//     marginRight: \"5px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   deleteBtn: {\r\n//     background: \"#ff4d4f\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"6px 10px\",\r\n//     borderRadius: \"6px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   table: { width: \"100%\", borderCollapse: \"collapse\" },\r\n//   th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\r\n//   td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\r\n//   tr: { textAlign: \"center\" },\r\n//   overlay: {\r\n//     position: \"fixed\",\r\n//     top: 0,\r\n//     left: 0,\r\n//     width: \"100vw\",\r\n//     height: \"100vh\",\r\n//     background: \"rgba(0,0,0,0.5)\",\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n//   dialog: {\r\n//     background: \"white\",\r\n//     padding: \"25px\",\r\n//     borderRadius: \"12px\",\r\n//     width: \"600px\",\r\n//     maxHeight: \"90vh\",\r\n//     overflowY: \"auto\",\r\n//   },\r\n//   dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\r\n//   form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\r\n//   row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\r\n//   field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\r\n//   label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n//   multiselect: {\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     height: \"100px\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n//   btnRow: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     marginTop: \"10px\",\r\n//   },\r\n//   saveBtn: {\r\n//     background: \"#6b3fa0\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   cancelBtn: {\r\n//     background: \"#ccc\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n// };\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}