{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswathi\\\\Downloads\\\\job-tracker\\\\job-tracker\\\\client\\\\src\\\\pages\\\\Jobs.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function Jobs() {\n//   const [jobs, setJobs] = useState([]);\n//   const [q, setQ] = useState(\"\");\n//   const [filteredJobs, setFilteredJobs] = useState([]);\n\n//   useEffect(() => {\n//     load();\n//   }, []);\n\n//   // Load all jobs from API\n//   const load = async () => {\n//     try {\n//       const res = await API.get(\"/jobs\");\n//       setJobs(res.data);\n//       setFilteredJobs(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch jobs:\", err);\n//     }\n//   };\n\n//   // Handle search (by job title or company name)\n//   const handleSearch = () => {\n//     const searchTerm = q.toLowerCase().trim();\n//     if (!searchTerm) {\n//       setFilteredJobs(jobs);\n//       return;\n//     }\n//     const filtered = jobs.filter((job) => {\n//       const title = job.title?.toLowerCase() || \"\";\n//       const company = job.company?.name?.toLowerCase() || \"\";\n//       return title.includes(searchTerm) || company.includes(searchTerm);\n//     });\n//     setFilteredJobs(filtered);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"navbar\">Job Tracker</div>\n//       <div className=\"container\">\n//         <h2>Jobs</h2>\n\n//         {/* Search bar */}\n//         <div className=\"card\" style={{ display: \"flex\", alignItems: \"center\" }}>\n//           <input\n//             placeholder=\"Search by job or company\"\n//             value={q}\n//             onChange={(e) => setQ(e.target.value)}\n//             style={{ flex: 1, padding: \"8px\" }}\n//           />\n//           <button\n//             className=\"btn\"\n//             style={{ marginLeft: 8 }}\n//             onClick={handleSearch}\n//           >\n//             Search\n//           </button>\n//         </div>\n\n//         {/* Job cards */}\n//         <div\n//           style={{\n//             marginTop: 12,\n//             display: \"grid\",\n//             gridTemplateColumns: \"repeat(auto-fit,minmax(280px,1fr))\",\n//             gap: 12,\n//           }}\n//         >\n//           {filteredJobs.length === 0 ? (\n//             <div>No jobs found</div>\n//           ) : (\n//             filteredJobs.map((j) => (\n//               <div className=\"card\" key={j._id}>\n//                 <h3 style={{ color: \"#6b21a8\" }}>{j.title}</h3>\n//                 <div style={{ fontSize: 13, color: \"#666\" }}>\n//                   {j.company?.name} • {j.location} • {j.type}\n//                 </div>\n//                 <p>{j.description?.slice(0, 200)}...</p>\n\n//                 {/* Skills fix */}\n//                 <div style={{ marginTop: 8 }}>\n//                   <strong>Skills:</strong>{\" \"}\n//                   {Array.isArray(j.skills) && j.skills.length > 0\n//                     ? j.skills.map((s) => s.name).join(\", \")\n//                     : \"No skills listed\"}\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Jobs() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [q, setQ] = useState(\"\");\n\n  // Filter states\n  const [jobType, setJobType] = useState(\"\");\n  const [minSalary, setMinSalary] = useState(\"\");\n  const [maxSalary, setMaxSalary] = useState(\"\");\n  useEffect(() => {\n    load();\n  }, []);\n  const load = async () => {\n    try {\n      const res = await API.get(\"/jobs\");\n      setJobs(res.data);\n      setFilteredJobs(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch jobs:\", err);\n    }\n  };\n\n  // Apply filters and search\n  useEffect(() => {\n    applyFilters();\n  }, [q, jobType, minSalary, maxSalary, jobs]);\n  const applyFilters = () => {\n    let result = [...jobs];\n    const searchTerm = q.toLowerCase().trim();\n    if (searchTerm) {\n      result = result.filter(job => {\n        var _job$title, _job$company, _job$company$name, _job$location;\n        const title = ((_job$title = job.title) === null || _job$title === void 0 ? void 0 : _job$title.toLowerCase()) || \"\";\n        const company = ((_job$company = job.company) === null || _job$company === void 0 ? void 0 : (_job$company$name = _job$company.name) === null || _job$company$name === void 0 ? void 0 : _job$company$name.toLowerCase()) || \"\";\n        const location = ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.toLowerCase()) || \"\";\n        return title.includes(searchTerm) || company.includes(searchTerm) || location.includes(searchTerm);\n      });\n    }\n    if (jobType) {\n      result = result.filter(job => {\n        var _job$type;\n        return ((_job$type = job.type) === null || _job$type === void 0 ? void 0 : _job$type.toLowerCase()) === jobType.toLowerCase();\n      });\n    }\n    if (minSalary || maxSalary) {\n      result = result.filter(job => {\n        const salary = job.salary || 0;\n        if (minSalary && salary < parseInt(minSalary)) return false;\n        if (maxSalary && salary > parseInt(maxSalary)) return false;\n        return true;\n      });\n    }\n    setFilteredJobs(result);\n  };\n  const clearFilters = () => {\n    setQ(\"\");\n    setJobType(\"\");\n    setMinSalary(\"\");\n    setMaxSalary(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: \"Job Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 300px\",\n        gap: \"20px\",\n        alignItems: \"start\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            marginBottom: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search by title, company, or location\",\n            value: q,\n            onChange: e => setQ(e.target.value),\n            style: {\n              flex: 1,\n              padding: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit,minmax(280px,1fr))\",\n            gap: 12\n          },\n          children: filteredJobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No jobs found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this) : filteredJobs.map(j => {\n            var _j$company, _j$description;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"#6b21a8\"\n                },\n                children: j.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 13,\n                  color: \"#666\"\n                },\n                children: [(_j$company = j.company) === null || _j$company === void 0 ? void 0 : _j$company.name, \" \\u2022 \", j.location, \" \\u2022 \", j.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), j.salary && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 13,\n                  color: \"#333\"\n                },\n                children: [\"\\uD83D\\uDCB0 Salary: \\u20B9\", j.salary]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [(_j$description = j.description) === null || _j$description === void 0 ? void 0 : _j$description.slice(0, 200), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Skills:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this), \" \", Array.isArray(j.skills) && j.skills.length > 0 ? j.skills.map(s => s.name).join(\", \") : \"No skills listed\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, j._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          padding: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filter Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              fontWeight: 600\n            },\n            children: \"Job Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: jobType,\n            onChange: e => setJobType(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"8px\",\n              marginTop: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Full Time\",\n              children: \"Full Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Part Time\",\n              children: \"Part Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Internship\",\n              children: \"Internship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Remote\",\n              children: \"Remote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              fontWeight: 600\n            },\n            children: \"Salary Range (\\u20B9):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              gap: \"5px\",\n              marginTop: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Min\",\n              value: minSalary,\n              onChange: e => setMinSalary(e.target.value),\n              style: {\n                flex: 1,\n                padding: \"6px\",\n                width: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Max\",\n              value: maxSalary,\n              onChange: e => setMaxSalary(e.target.value),\n              style: {\n                flex: 1,\n                padding: \"6px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: clearFilters,\n          style: {\n            marginTop: 15,\n            width: \"100%\",\n            background: \"#6b21a8\",\n            color: \"white\",\n            padding: \"8px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Clear Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(Jobs, \"rcUfDBmVi+b1YEV5AhZcbNT5SZU=\");\n_c = Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","Jobs","_s","jobs","setJobs","filteredJobs","setFilteredJobs","q","setQ","jobType","setJobType","minSalary","setMinSalary","maxSalary","setMaxSalary","load","res","get","data","err","console","error","applyFilters","result","searchTerm","toLowerCase","trim","filter","job","_job$title","_job$company","_job$company$name","_job$location","title","company","name","location","includes","_job$type","type","salary","parseInt","clearFilters","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","alignItems","marginBottom","placeholder","value","onChange","e","target","flex","padding","length","map","j","_j$company","_j$description","color","fontSize","description","slice","marginTop","Array","isArray","skills","s","join","_id","fontWeight","width","onClick","background","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/aswathi/Downloads/job-tracker/job-tracker/client/src/pages/Jobs.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function Jobs() {\n//   const [jobs, setJobs] = useState([]);\n//   const [q, setQ] = useState(\"\");\n//   const [filteredJobs, setFilteredJobs] = useState([]);\n\n//   useEffect(() => {\n//     load();\n//   }, []);\n\n//   // Load all jobs from API\n//   const load = async () => {\n//     try {\n//       const res = await API.get(\"/jobs\");\n//       setJobs(res.data);\n//       setFilteredJobs(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch jobs:\", err);\n//     }\n//   };\n\n//   // Handle search (by job title or company name)\n//   const handleSearch = () => {\n//     const searchTerm = q.toLowerCase().trim();\n//     if (!searchTerm) {\n//       setFilteredJobs(jobs);\n//       return;\n//     }\n//     const filtered = jobs.filter((job) => {\n//       const title = job.title?.toLowerCase() || \"\";\n//       const company = job.company?.name?.toLowerCase() || \"\";\n//       return title.includes(searchTerm) || company.includes(searchTerm);\n//     });\n//     setFilteredJobs(filtered);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"navbar\">Job Tracker</div>\n//       <div className=\"container\">\n//         <h2>Jobs</h2>\n\n//         {/* Search bar */}\n//         <div className=\"card\" style={{ display: \"flex\", alignItems: \"center\" }}>\n//           <input\n//             placeholder=\"Search by job or company\"\n//             value={q}\n//             onChange={(e) => setQ(e.target.value)}\n//             style={{ flex: 1, padding: \"8px\" }}\n//           />\n//           <button\n//             className=\"btn\"\n//             style={{ marginLeft: 8 }}\n//             onClick={handleSearch}\n//           >\n//             Search\n//           </button>\n//         </div>\n\n//         {/* Job cards */}\n//         <div\n//           style={{\n//             marginTop: 12,\n//             display: \"grid\",\n//             gridTemplateColumns: \"repeat(auto-fit,minmax(280px,1fr))\",\n//             gap: 12,\n//           }}\n//         >\n//           {filteredJobs.length === 0 ? (\n//             <div>No jobs found</div>\n//           ) : (\n//             filteredJobs.map((j) => (\n//               <div className=\"card\" key={j._id}>\n//                 <h3 style={{ color: \"#6b21a8\" }}>{j.title}</h3>\n//                 <div style={{ fontSize: 13, color: \"#666\" }}>\n//                   {j.company?.name} • {j.location} • {j.type}\n//                 </div>\n//                 <p>{j.description?.slice(0, 200)}...</p>\n\n//                 {/* Skills fix */}\n//                 <div style={{ marginTop: 8 }}>\n//                   <strong>Skills:</strong>{\" \"}\n//                   {Array.isArray(j.skills) && j.skills.length > 0\n//                     ? j.skills.map((s) => s.name).join(\", \")\n//                     : \"No skills listed\"}\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../api\";\n\nexport default function Jobs() {\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [q, setQ] = useState(\"\");\n\n  // Filter states\n  const [jobType, setJobType] = useState(\"\");\n  const [minSalary, setMinSalary] = useState(\"\");\n  const [maxSalary, setMaxSalary] = useState(\"\");\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const load = async () => {\n    try {\n      const res = await API.get(\"/jobs\");\n      setJobs(res.data);\n      setFilteredJobs(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch jobs:\", err);\n    }\n  };\n\n  // Apply filters and search\n  useEffect(() => {\n    applyFilters();\n  }, [q, jobType, minSalary, maxSalary, jobs]);\n\n  const applyFilters = () => {\n    let result = [...jobs];\n\n    const searchTerm = q.toLowerCase().trim();\n    if (searchTerm) {\n      result = result.filter((job) => {\n        const title = job.title?.toLowerCase() || \"\";\n        const company = job.company?.name?.toLowerCase() || \"\";\n        const location = job.location?.toLowerCase() || \"\";\n        return (\n          title.includes(searchTerm) ||\n          company.includes(searchTerm) ||\n          location.includes(searchTerm)\n        );\n      });\n    }\n\n    if (jobType) {\n      result = result.filter(\n        (job) => job.type?.toLowerCase() === jobType.toLowerCase()\n      );\n    }\n\n    if (minSalary || maxSalary) {\n      result = result.filter((job) => {\n        const salary = job.salary || 0;\n        if (minSalary && salary < parseInt(minSalary)) return false;\n        if (maxSalary && salary > parseInt(maxSalary)) return false;\n        return true;\n      });\n    }\n\n    setFilteredJobs(result);\n  };\n\n  const clearFilters = () => {\n    setQ(\"\");\n    setJobType(\"\");\n    setMinSalary(\"\");\n    setMaxSalary(\"\");\n  };\n\n  return (\n    <div>\n      <div className=\"navbar\">Job Tracker</div>\n\n      <div\n        className=\"container\"\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 300px\",\n          gap: \"20px\",\n          alignItems: \"start\",\n        }}\n      >\n        {/* Main Job List Section */}\n        <div>\n          <h2>Jobs</h2>\n\n          {/* Search Bar */}\n          <div\n            className=\"card\"\n            style={{ display: \"flex\", alignItems: \"center\", marginBottom: 12 }}\n          >\n            <input\n              placeholder=\"Search by title, company, or location\"\n              value={q}\n              onChange={(e) => setQ(e.target.value)}\n              style={{ flex: 1, padding: \"8px\" }}\n            />\n          </div>\n\n          {/* Job Cards */}\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit,minmax(280px,1fr))\",\n              gap: 12,\n            }}\n          >\n            {filteredJobs.length === 0 ? (\n              <div>No jobs found</div>\n            ) : (\n              filteredJobs.map((j) => (\n                <div className=\"card\" key={j._id}>\n                  <h3 style={{ color: \"#6b21a8\" }}>{j.title}</h3>\n                  <div style={{ fontSize: 13, color: \"#666\" }}>\n                    {j.company?.name} • {j.location} • {j.type}\n                  </div>\n                  {j.salary && (\n                    <div style={{ fontSize: 13, color: \"#333\" }}>\n                      💰 Salary: ₹{j.salary}\n                    </div>\n                  )}\n                  <p>{j.description?.slice(0, 200)}...</p>\n\n                  {/* Skills */}\n                  <div style={{ marginTop: 8 }}>\n                    <strong>Skills:</strong>{\" \"}\n                    {Array.isArray(j.skills) && j.skills.length > 0\n                      ? j.skills.map((s) => s.name).join(\", \")\n                      : \"No skills listed\"}\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Filter Sidebar */}\n        <div className=\"card\" style={{ padding: \"15px\" }}>\n          <h4>Filter Jobs</h4>\n\n          {/* Job Type */}\n          <div style={{ marginTop: 10 }}>\n            <label style={{ fontWeight: 600 }}>Job Type:</label>\n            <select\n              value={jobType}\n              onChange={(e) => setJobType(e.target.value)}\n              style={{ width: \"100%\", padding: \"8px\", marginTop: \"5px\" }}\n            >\n              <option value=\"\">All</option>\n              <option value=\"Full Time\">Full Time</option>\n              <option value=\"Part Time\">Part Time</option>\n              <option value=\"Internship\">Internship</option>\n              <option value=\"Remote\">Remote</option>\n            </select>\n          </div>\n\n          {/* Salary Range */}\n          <div style={{ marginTop: 10 }}>\n            <label style={{ fontWeight: 600 }}>Salary Range (₹):</label>\n            <div style={{ display: \"flex\", gap: \"5px\", marginTop: \"5px\" }}>\n              <input\n                type=\"number\"\n                placeholder=\"Min\"\n                value={minSalary}\n                onChange={(e) => setMinSalary(e.target.value)}\n                style={{ flex: 1, padding: \"6px\", width:'10px' }}\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Max\"\n                value={maxSalary}\n                onChange={(e) => setMaxSalary(e.target.value)}\n                style={{ flex: 1, padding: \"6px\" }}\n              />\n            </div>\n          </div>\n\n          {/* Clear Filters */}\n          <button\n            className=\"btn\"\n            onClick={clearFilters}\n            style={{\n              marginTop: 15,\n              width: \"100%\",\n              background: \"#6b21a8\",\n              color: \"white\",\n              padding: \"8px\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Clear Filters\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}