{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswathi\\\\Downloads\\\\job-tracker\\\\job-tracker\\\\client\\\\src\\\\components\\\\JobList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function JobList() {\n//   const [jobs, setJobs] = useState([]);\n//   const [companies, setCompanies] = useState([]);\n\n//   // form states\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [companyId, setCompanyId] = useState(\"\");\n//   const [location, setLocation] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [type, setType] = useState(\"\");\n//   const [skills, setSkills] = useState([]);\n\n//   // dialog visibility\n//   const [showDialog, setShowDialog] = useState(false);\n\n//   const availableSkills = [\n//     \"HTML\",\n//     \"CSS\",\n//     \"JavaScript\",\n//     \"React\",\n//     \"Node.js\",\n//     \"Express\",\n//     \"MongoDB\",\n//     \"Python\",\n//     \"Java\",\n//     \"C++\",\n//   ];\n\n//   const fetchJobs = async () => {\n//     const res = await API.get(\"/jobs\");\n//     setJobs(res.data);\n//   };\n\n//   const fetchCompanies = async () => {\n//     const res = await API.get(\"/companies\");\n//     setCompanies(res.data);\n//   };\n\n//   useEffect(() => {\n//     fetchJobs();\n//     fetchCompanies();\n//   }, []);\n\n//   const handleAdd = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await API.post(\"/jobs\", {\n//         title,\n//         description,\n//         companyId,\n//         location,\n//         category,\n//         type,\n//         skills,\n//       });\n\n//       // reset\n//       setTitle(\"\");\n//       setDescription(\"\");\n//       setCompanyId(\"\");\n//       setLocation(\"\");\n//       setCategory(\"\");\n//       setType(\"\");\n//       setSkills([]);\n\n//       setShowDialog(false);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(err.response?.data?.message || \"Add job failed\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this job?\")) {\n//       await API.delete(`/jobs/${id}`);\n//       fetchJobs();\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2 style={styles.heading}>Job Management</h2>\n\n//       <div style={styles.topBar}>\n//         <button style={styles.addBtn} onClick={() => setShowDialog(true)}>\n//           + Add Job\n//         </button>\n//       </div>\n\n//       <table style={styles.table}>\n//         <thead style={{ background: \"#ede4ff\" }}>\n//           <tr>\n//             <th style={styles.th}>Title</th>\n//             <th style={styles.th}>Description</th>\n//             <th style={styles.th}>Company</th>\n//             <th style={styles.th}>Location</th>\n//             <th style={styles.th}>Category</th>\n//             <th style={styles.th}>Type</th>\n//             <th style={styles.th}>Skills</th>\n//             <th style={styles.th}>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {jobs.map((j) => (\n//             <tr key={j._id} style={styles.tr}>\n//               <td style={styles.td}>{j.title}</td>\n//               <td style={styles.td}>{j.description}</td>\n//               <td style={styles.td}>{j.company?.name}</td>\n//               <td style={styles.td}>{j.location}</td>\n//               <td style={styles.td}>{j.category}</td>\n//               <td style={styles.td}>{j.type}</td>\n//               <td style={styles.td}>{j.skills?.join(\", \")}</td>\n//               <td style={styles.td}>\n//                 <button\n//                   onClick={() => handleDelete(j._id)}\n//                   style={styles.deleteBtn}\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Dialog box */}\n//       {showDialog && (\n//         <div style={styles.overlay}>\n//           <div style={styles.dialog}>\n//             <h3 style={styles.dialogTitle}>Add New Job</h3>\n//             <form onSubmit={handleAdd} style={styles.form}>\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Title</label>\n//                   <input\n//                     style={styles.input}\n//                     value={title}\n//                     onChange={(e) => setTitle(e.target.value)}\n//                     required\n//                   />\n//                 </div>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Description</label>\n//                   <input\n//                     style={styles.input}\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                     required\n//                   />\n//                 </div>\n//               </div>\n\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Company</label>\n//                   <select\n//                     style={styles.input}\n//                     value={companyId}\n//                     onChange={(e) => setCompanyId(e.target.value)}\n//                     required\n//                   >\n//                     <option value=\"\">Select Company</option>\n//                     {companies.map((c) => (\n//                       <option key={c._id} value={c._id}>\n//                         {c.name}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Location</label>\n//                   <input\n//                     style={styles.input}\n//                     value={location}\n//                     onChange={(e) => setLocation(e.target.value)}\n//                   />\n//                 </div>\n//               </div>\n\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Category</label>\n//                   <input\n//                     style={styles.input}\n//                     value={category}\n//                     onChange={(e) => setCategory(e.target.value)}\n//                   />\n//                 </div>\n\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Job Type</label>\n//                   <select\n//                     style={styles.input}\n//                     value={type}\n//                     onChange={(e) => setType(e.target.value)}\n//                     required\n//                   >\n//                     <option value=\"\">Select Type</option>\n//                     <option value=\"full-time\">Full-Time</option>\n//                     <option value=\"part-time\">Part-Time</option>\n//                     <option value=\"internship\">Internship</option>\n//                   </select>\n//                 </div>\n//               </div>\n\n//               <div style={styles.field}>\n//                 <label style={styles.label}>Required Skills</label>\n//                 <select\n//                   multiple\n//                   style={styles.multiselect}\n//                   value={skills}\n//                   onChange={(e) =>\n//                     setSkills(\n//                       Array.from(e.target.selectedOptions, (opt) => opt.value)\n//                     )\n//                   }\n//                 >\n//                   {availableSkills.map((skill) => (\n//                     <option key={skill} value={skill}>\n//                       {skill}\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <small style={{ color: \"#555\" }}>\n//                   Hold Ctrl (Windows) or Cmd (Mac) to select multiple\n//                 </small>\n//               </div>\n\n//               <div style={styles.btnRow}>\n//                 <button type=\"submit\" style={styles.saveBtn}>\n//                   Save\n//                 </button>\n//                 <button\n//                   type=\"button\"\n//                   style={styles.cancelBtn}\n//                   onClick={() => setShowDialog(false)}\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\n//   heading: { color: \"#6b3fa0\", textAlign: \"center\" },\n//   topBar: {\n//     display: \"flex\",\n//     justifyContent: \"flex-end\",\n//     marginBottom: \"20px\",\n//   },\n//   addBtn: {\n//     background: \"#6b3fa0\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   table: { width: \"100%\", borderCollapse: \"collapse\" },\n//   th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\n//   td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\n//   tr: { textAlign: \"center\" },\n//   deleteBtn: {\n//     background: \"#ff4d4f\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"5px 10px\",\n//     borderRadius: \"6px\",\n//     cursor: \"pointer\",\n//   },\n//   overlay: {\n//     position: \"fixed\",\n//     top: 0,\n//     left: 0,\n//     width: \"100vw\",\n//     height: \"100vh\",\n//     background: \"rgba(0,0,0,0.5)\",\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//   },\n//   dialog: {\n//     background: \"white\",\n//     padding: \"25px\",\n//     borderRadius: \"12px\",\n//     width: \"600px\",\n//     maxHeight: \"90vh\",\n//     overflowY: \"auto\",\n//   },\n//   dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\n//   form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\n//   row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\n//   field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\n//   label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\n//   input: {\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     fontSize: \"14px\",\n//   },\n//   multiselect: {\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     height: \"100px\",\n//     fontSize: \"14px\",\n//   },\n//   btnRow: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     marginTop: \"10px\",\n//   },\n//   saveBtn: {\n//     background: \"#6b3fa0\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   cancelBtn: {\n//     background: \"#ccc\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n// };\n\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function JobList() {\n//   const [jobs, setJobs] = useState([]);\n//   const [companies, setCompanies] = useState([]);\n//   const [availableSkills] = useState([\n//     \"HTML\", \"CSS\", \"JavaScript\", \"React\", \"Node.js\",\n//     \"Express\", \"MongoDB\", \"Python\", \"Java\", \"C++\",\n//   ]);\n\n//   // form states\n//   const [form, setForm] = useState({\n//     title: \"\",\n//     description: \"\",\n//     companyId: \"\",\n//     location: \"\",\n//     category: \"\",\n//     type: \"\",\n//     skills: [],\n//   });\n\n//   const [editingJob, setEditingJob] = useState(null);\n//   const [showDialog, setShowDialog] = useState(false);\n\n//   useEffect(() => {\n//     fetchJobs();\n//     fetchCompanies();\n//   }, []);\n\n//   const fetchJobs = async () => {\n//     const res = await API.get(\"/jobs\");\n//     setJobs(res.data);\n//   };\n\n//   const fetchCompanies = async () => {\n//     const res = await API.get(\"/companies\");\n//     setCompanies(res.data);\n//   };\n\n//   const openDialog = (job = null) => {\n//     if (job) {\n//       setEditingJob(job);\n//       setForm({\n//         title: job.title,\n//         description: job.description,\n//         companyId: job.company?._id || \"\",\n//         location: job.location || \"\",\n//         category: job.category || \"\",\n//         type: job.type || \"\",\n//         skills: job.skills || [],\n//       });\n//     } else {\n//       setEditingJob(null);\n//       setForm({\n//         title: \"\",\n//         description: \"\",\n//         companyId: \"\",\n//         location: \"\",\n//         category: \"\",\n//         type: \"\",\n//         skills: [],\n//       });\n//     }\n//     setShowDialog(true);\n//   };\n\n//   const handleChange = (key, value) => {\n//     setForm((prev) => ({ ...prev, [key]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editingJob) {\n//         await API.patch(`/jobs/${editingJob._id}`, form);\n//         alert(\"Job updated successfully!\");\n//       } else {\n//         await API.post(\"/jobs\", form);\n//         alert(\"Job added successfully!\");\n//       }\n//       setShowDialog(false);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(err.response?.data?.message || \"Error saving job\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this job?\")) {\n//       await API.delete(`/jobs/${id}`);\n//       alert(\"Job deleted successfully!\");\n//       fetchJobs();\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2 style={styles.heading}>Job Management</h2>\n\n//       <div style={styles.topBar}>\n//         <button style={styles.addBtn} onClick={() => openDialog()}>\n//           + Add Job\n//         </button>\n//       </div>\n\n//       <table style={styles.table}>\n//         <thead style={{ background: \"#ede4ff\" }}>\n//           <tr>\n//             <th style={styles.th}>Title</th>\n//             <th style={styles.th}>Description</th>\n//             <th style={styles.th}>Company</th>\n//             <th style={styles.th}>Location</th>\n//             <th style={styles.th}>Category</th>\n//             <th style={styles.th}>Type</th>\n//             <th style={styles.th}>Skills</th>\n//             <th style={styles.th}>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {jobs.map((j) => (\n//             <tr key={j._id} style={styles.tr}>\n//               <td style={styles.td}>{j.title}</td>\n//               <td style={styles.td}>{j.description}</td>\n//               <td style={styles.td}>{j.company?.name}</td>\n//               <td style={styles.td}>{j.location}</td>\n//               <td style={styles.td}>{j.category}</td>\n//               <td style={styles.td}>{j.type}</td>\n//               <td style={styles.td}>{j.skills?.join(\", \")}</td>\n//               <td style={styles.td}>\n//                 <button\n//                   onClick={() => openDialog(j)}\n//                   style={styles.editBtn}\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => handleDelete(j._id)}\n//                   style={styles.deleteBtn}\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Dialog */}\n//       {showDialog && (\n//         <div style={styles.overlay}>\n//           <div style={styles.dialog}>\n//             <h3 style={styles.dialogTitle}>\n//               {editingJob ? \"Edit Job\" : \"Add New Job\"}\n//             </h3>\n//             <form onSubmit={handleSubmit} style={styles.form}>\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Title</label>\n//                   <input\n//                     style={styles.input}\n//                     value={form.title}\n//                     onChange={(e) => handleChange(\"title\", e.target.value)}\n//                     required\n//                   />\n//                 </div>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Description</label>\n//                   <input\n//                     style={styles.input}\n//                     value={form.description}\n//                     onChange={(e) =>\n//                       handleChange(\"description\", e.target.value)\n//                     }\n//                     required\n//                   />\n//                 </div>\n//               </div>\n\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Company</label>\n//                   <select\n//                     style={styles.input}\n//                     value={form.companyId}\n//                     onChange={(e) =>\n//                       handleChange(\"companyId\", e.target.value)\n//                     }\n//                     required\n//                   >\n//                     <option value=\"\">Select Company</option>\n//                     {companies.map((c) => (\n//                       <option key={c._id} value={c._id}>\n//                         {c.name}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Location</label>\n//                   <input\n//                     style={styles.input}\n//                     value={form.location}\n//                     onChange={(e) => handleChange(\"location\", e.target.value)}\n//                   />\n//                 </div>\n//               </div>\n\n//               <div style={styles.row}>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Category</label>\n//                   <input\n//                     style={styles.input}\n//                     value={form.category}\n//                     onChange={(e) => handleChange(\"category\", e.target.value)}\n//                   />\n//                 </div>\n//                 <div style={styles.field}>\n//                   <label style={styles.label}>Job Type</label>\n//                   <select\n//                     style={styles.input}\n//                     value={form.type}\n//                     onChange={(e) => handleChange(\"type\", e.target.value)}\n//                   >\n//                     <option value=\"\">Select Type</option>\n//                     <option value=\"full-time\">Full-Time</option>\n//                     <option value=\"part-time\">Part-Time</option>\n//                     <option value=\"internship\">Internship</option>\n//                   </select>\n//                 </div>\n//               </div>\n\n//               <div style={styles.field}>\n//                 <label style={styles.label}>Required Skills</label>\n//                 <select\n//                   multiple\n//                   style={styles.multiselect}\n//                   value={form.skills}\n//                   onChange={(e) =>\n//                     handleChange(\n//                       \"skills\",\n//                       Array.from(e.target.selectedOptions, (opt) => opt.value)\n//                     )\n//                   }\n//                 >\n//                   {availableSkills.map((skill) => (\n//                     <option key={skill} value={skill}>\n//                       {skill}\n//                     </option>\n//                   ))}\n//                 </select>\n//               </div>\n\n//               <div style={styles.btnRow}>\n//                 <button type=\"submit\" style={styles.saveBtn}>\n//                   {editingJob ? \"Update\" : \"Save\"}\n//                 </button>\n//                 <button\n//                   type=\"button\"\n//                   style={styles.cancelBtn}\n//                   onClick={() => setShowDialog(false)}\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\n//   heading: { color: \"#6b3fa0\", textAlign: \"center\" },\n//   topBar: {\n//     display: \"flex\",\n//     justifyContent: \"flex-end\",\n//     marginBottom: \"20px\",\n//   },\n//   addBtn: {\n//     background: \"#6b3fa0\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   editBtn: {\n//     background: \"#4caf50\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"6px 10px\",\n//     borderRadius: \"6px\",\n//     marginRight: \"5px\",\n//     cursor: \"pointer\",\n//   },\n//   deleteBtn: {\n//     background: \"#ff4d4f\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"6px 10px\",\n//     borderRadius: \"6px\",\n//     cursor: \"pointer\",\n//   },\n//   table: { width: \"100%\", borderCollapse: \"collapse\" },\n//   th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\n//   td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\n//   tr: { textAlign: \"center\" },\n//   overlay: {\n//     position: \"fixed\",\n//     top: 0,\n//     left: 0,\n//     width: \"100vw\",\n//     height: \"100vh\",\n//     background: \"rgba(0,0,0,0.5)\",\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//   },\n//   dialog: {\n//     background: \"white\",\n//     padding: \"25px\",\n//     borderRadius: \"12px\",\n//     width: \"600px\",\n//     maxHeight: \"90vh\",\n//     overflowY: \"auto\",\n//   },\n//   dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\n//   form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\n//   row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\n//   field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\n//   label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\n//   input: {\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     fontSize: \"14px\",\n//   },\n//   multiselect: {\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     height: \"100px\",\n//     fontSize: \"14px\",\n//   },\n//   btnRow: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     marginTop: \"10px\",\n//   },\n//   saveBtn: {\n//     background: \"#6b3fa0\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   cancelBtn: {\n//     background: \"#ccc\",\n//     border: \"none\",\n//     padding: \"10px 18px\",\n//     borderRadius: \"8px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n// };\n\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobList() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [skills, setSkills] = useState([]);\n  const [form, setForm] = useState({\n    title: \"\",\n    description: \"\",\n    companyId: \"\",\n    location: \"\",\n    category: \"\",\n    type: \"\",\n    skills: []\n  });\n  const [editingJob, setEditingJob] = useState(null);\n  const [showDialog, setShowDialog] = useState(false);\n  useEffect(() => {\n    fetchJobs();\n    fetchCompanies();\n    fetchSkills();\n  }, []);\n  const fetchJobs = async () => {\n    const res = await API.get(\"/jobs\");\n    setJobs(res.data);\n  };\n  const fetchCompanies = async () => {\n    const res = await API.get(\"/companies\");\n    setCompanies(res.data);\n  };\n  const fetchSkills = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await API.get(\"/skills/list\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSkills(res.data);\n    } catch (err) {\n      console.error(\"Error fetching skills:\", err);\n    }\n  };\n  const openDialog = (job = null) => {\n    if (job) {\n      var _job$company, _job$skills;\n      setEditingJob(job);\n      setForm({\n        title: job.title,\n        description: job.description,\n        companyId: ((_job$company = job.company) === null || _job$company === void 0 ? void 0 : _job$company._id) || \"\",\n        location: job.location || \"\",\n        category: job.category || \"\",\n        type: job.type || \"\",\n        skills: ((_job$skills = job.skills) === null || _job$skills === void 0 ? void 0 : _job$skills.map(s => s._id ? s._id : s)) || []\n      });\n    } else {\n      setEditingJob(null);\n      setForm({\n        title: \"\",\n        description: \"\",\n        companyId: \"\",\n        location: \"\",\n        category: \"\",\n        type: \"\",\n        skills: []\n      });\n    }\n    setShowDialog(true);\n  };\n  const handleChange = (key, value) => {\n    setForm(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const handleSkillChange = e => {\n    const selected = Array.from(e.target.selectedOptions, opt => opt.value);\n    handleChange(\"skills\", selected);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingJob) {\n        await API.patch(`/jobs/${editingJob._id}`, form);\n        alert(\"Job updated successfully!\");\n      } else {\n        await API.post(\"/jobs\", form);\n        alert(\"Job added successfully!\");\n      }\n      setShowDialog(false);\n      fetchJobs();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error saving job\");\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure you want to delete this job?\")) {\n      await API.delete(`/jobs/${id}`);\n      alert(\"Job deleted successfully!\");\n      fetchJobs();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Job Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.topBar,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.addBtn,\n        onClick: () => openDialog(),\n        children: \"+ Add Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        style: {\n          background: \"#ede4ff\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.th,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.th,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.th,\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.th,\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.th,\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.th,\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.th,\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.th,\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: jobs.map(j => {\n          var _j$company;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: styles.tr,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: j.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: j.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: (_j$company = j.company) === null || _j$company === void 0 ? void 0 : _j$company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: j.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: j.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: j.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: Array.isArray(j.skills) ? j.skills.map(s => typeof s === \"object\" ? s.name : s).join(\", \") : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: styles.td,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openDialog(j),\n                style: styles.editBtn,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(j._id),\n                style: styles.deleteBtn,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 15\n            }, this)]\n          }, j._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 7\n    }, this), showDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.dialog,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.dialogTitle,\n          children: editingJob ? \"Edit Job\" : \"Add New Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.field,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: styles.input,\n                value: form.title,\n                onChange: e => handleChange(\"title\", e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.field,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: styles.input,\n                value: form.description,\n                onChange: e => handleChange(\"description\", e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.field,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                style: styles.input,\n                value: form.companyId,\n                onChange: e => handleChange(\"companyId\", e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 21\n                }, this), companies.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: c._id,\n                  children: c.name\n                }, c._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.field,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: styles.input,\n                value: form.location,\n                onChange: e => handleChange(\"location\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.field,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: styles.input,\n                value: form.category,\n                onChange: e => handleChange(\"category\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.field,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Job Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                style: styles.input,\n                value: form.type,\n                onChange: e => handleChange(\"type\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 959,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"full-time\",\n                  children: \"Full-Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 960,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"part-time\",\n                  children: \"Part-Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 961,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"internship\",\n                  children: \"Internship\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.field,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.label,\n              children: \"Required Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              multiple: true,\n              style: styles.multiselect,\n              value: form.skills,\n              onChange: handleSkillChange,\n              children: skills.map(skill => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: skill._id,\n                children: skill.name\n              }, skill._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: \"#555\"\n              },\n              children: \"Hold Ctrl (Windows) or Cmd (Mac) to select multiple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.btnRow,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: styles.saveBtn,\n              children: editingJob ? \"Update\" : \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              style: styles.cancelBtn,\n              onClick: () => setShowDialog(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 827,\n    columnNumber: 5\n  }, this);\n}\n_s(JobList, \"4TDJTYD2rqHYW1QN8TiB+HGVhaA=\");\n_c = JobList;\nconst styles = {\n  container: {\n    padding: \"20px\",\n    fontFamily: \"Arial, sans-serif\"\n  },\n  heading: {\n    color: \"#6b3fa0\",\n    textAlign: \"center\"\n  },\n  topBar: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    marginBottom: \"20px\"\n  },\n  addBtn: {\n    background: \"#6b3fa0\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"10px 18px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  },\n  editBtn: {\n    background: \"#4caf50\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"6px 10px\",\n    borderRadius: \"6px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n  deleteBtn: {\n    background: \"#ff4d4f\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"6px 10px\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\"\n  },\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\"\n  },\n  th: {\n    padding: \"10px\",\n    borderBottom: \"2px solid #ccc\"\n  },\n  td: {\n    padding: \"10px\",\n    borderBottom: \"1px solid #ddd\"\n  },\n  tr: {\n    textAlign: \"center\"\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    background: \"rgba(0,0,0,0.5)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  dialog: {\n    background: \"white\",\n    padding: \"25px\",\n    borderRadius: \"12px\",\n    width: \"600px\",\n    maxHeight: \"90vh\",\n    overflowY: \"auto\"\n  },\n  dialogTitle: {\n    textAlign: \"center\",\n    color: \"#6b3fa0\",\n    marginBottom: \"15px\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\"\n  },\n  row: {\n    display: \"flex\",\n    gap: \"15px\",\n    flexWrap: \"wrap\"\n  },\n  field: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  label: {\n    fontWeight: \"bold\",\n    marginBottom: \"5px\",\n    color: \"#333\"\n  },\n  input: {\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\",\n    fontSize: \"14px\"\n  },\n  multiselect: {\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\",\n    height: \"120px\",\n    fontSize: \"14px\"\n  },\n  btnRow: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginTop: \"10px\"\n  },\n  saveBtn: {\n    background: \"#6b3fa0\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"10px 18px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  },\n  cancelBtn: {\n    background: \"#ccc\",\n    border: \"none\",\n    padding: \"10px 18px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","companies","setCompanies","skills","setSkills","form","setForm","title","description","companyId","location","category","type","editingJob","setEditingJob","showDialog","setShowDialog","fetchJobs","fetchCompanies","fetchSkills","res","get","data","token","localStorage","getItem","headers","Authorization","err","console","error","openDialog","job","_job$company","_job$skills","company","_id","map","s","handleChange","key","value","prev","handleSkillChange","e","selected","Array","from","target","selectedOptions","opt","handleSubmit","preventDefault","patch","alert","post","_err$response","_err$response$data","response","message","handleDelete","id","window","confirm","delete","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","topBar","addBtn","onClick","table","background","th","j","_j$company","tr","td","name","isArray","join","editBtn","deleteBtn","overlay","dialog","dialogTitle","onSubmit","row","field","label","input","onChange","required","c","multiple","multiselect","skill","color","btnRow","saveBtn","cancelBtn","_c","padding","fontFamily","textAlign","display","justifyContent","marginBottom","border","borderRadius","cursor","fontWeight","marginRight","width","borderCollapse","borderBottom","position","top","left","height","alignItems","maxHeight","overflowY","flexDirection","gap","flexWrap","flex","fontSize","marginTop","$RefreshReg$"],"sources":["C:/Users/aswathi/Downloads/job-tracker/job-tracker/client/src/components/JobList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n\r\n// export default function JobList() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [companies, setCompanies] = useState([]);\r\n\r\n//   // form states\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [companyId, setCompanyId] = useState(\"\");\r\n//   const [location, setLocation] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [type, setType] = useState(\"\");\r\n//   const [skills, setSkills] = useState([]);\r\n\r\n//   // dialog visibility\r\n//   const [showDialog, setShowDialog] = useState(false);\r\n\r\n//   const availableSkills = [\r\n//     \"HTML\",\r\n//     \"CSS\",\r\n//     \"JavaScript\",\r\n//     \"React\",\r\n//     \"Node.js\",\r\n//     \"Express\",\r\n//     \"MongoDB\",\r\n//     \"Python\",\r\n//     \"Java\",\r\n//     \"C++\",\r\n//   ];\r\n\r\n//   const fetchJobs = async () => {\r\n//     const res = await API.get(\"/jobs\");\r\n//     setJobs(res.data);\r\n//   };\r\n\r\n//   const fetchCompanies = async () => {\r\n//     const res = await API.get(\"/companies\");\r\n//     setCompanies(res.data);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchJobs();\r\n//     fetchCompanies();\r\n//   }, []);\r\n\r\n//   const handleAdd = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await API.post(\"/jobs\", {\r\n//         title,\r\n//         description,\r\n//         companyId,\r\n//         location,\r\n//         category,\r\n//         type,\r\n//         skills,\r\n//       });\r\n\r\n//       // reset\r\n//       setTitle(\"\");\r\n//       setDescription(\"\");\r\n//       setCompanyId(\"\");\r\n//       setLocation(\"\");\r\n//       setCategory(\"\");\r\n//       setType(\"\");\r\n//       setSkills([]);\r\n\r\n//       setShowDialog(false);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(err.response?.data?.message || \"Add job failed\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this job?\")) {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       fetchJobs();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2 style={styles.heading}>Job Management</h2>\r\n\r\n//       <div style={styles.topBar}>\r\n//         <button style={styles.addBtn} onClick={() => setShowDialog(true)}>\r\n//           + Add Job\r\n//         </button>\r\n//       </div>\r\n\r\n//       <table style={styles.table}>\r\n//         <thead style={{ background: \"#ede4ff\" }}>\r\n//           <tr>\r\n//             <th style={styles.th}>Title</th>\r\n//             <th style={styles.th}>Description</th>\r\n//             <th style={styles.th}>Company</th>\r\n//             <th style={styles.th}>Location</th>\r\n//             <th style={styles.th}>Category</th>\r\n//             <th style={styles.th}>Type</th>\r\n//             <th style={styles.th}>Skills</th>\r\n//             <th style={styles.th}>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {jobs.map((j) => (\r\n//             <tr key={j._id} style={styles.tr}>\r\n//               <td style={styles.td}>{j.title}</td>\r\n//               <td style={styles.td}>{j.description}</td>\r\n//               <td style={styles.td}>{j.company?.name}</td>\r\n//               <td style={styles.td}>{j.location}</td>\r\n//               <td style={styles.td}>{j.category}</td>\r\n//               <td style={styles.td}>{j.type}</td>\r\n//               <td style={styles.td}>{j.skills?.join(\", \")}</td>\r\n//               <td style={styles.td}>\r\n//                 <button\r\n//                   onClick={() => handleDelete(j._id)}\r\n//                   style={styles.deleteBtn}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Dialog box */}\r\n//       {showDialog && (\r\n//         <div style={styles.overlay}>\r\n//           <div style={styles.dialog}>\r\n//             <h3 style={styles.dialogTitle}>Add New Job</h3>\r\n//             <form onSubmit={handleAdd} style={styles.form}>\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Title</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={title}\r\n//                     onChange={(e) => setTitle(e.target.value)}\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Description</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={description}\r\n//                     onChange={(e) => setDescription(e.target.value)}\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Company</label>\r\n//                   <select\r\n//                     style={styles.input}\r\n//                     value={companyId}\r\n//                     onChange={(e) => setCompanyId(e.target.value)}\r\n//                     required\r\n//                   >\r\n//                     <option value=\"\">Select Company</option>\r\n//                     {companies.map((c) => (\r\n//                       <option key={c._id} value={c._id}>\r\n//                         {c.name}\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Location</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={location}\r\n//                     onChange={(e) => setLocation(e.target.value)}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Category</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={category}\r\n//                     onChange={(e) => setCategory(e.target.value)}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Job Type</label>\r\n//                   <select\r\n//                     style={styles.input}\r\n//                     value={type}\r\n//                     onChange={(e) => setType(e.target.value)}\r\n//                     required\r\n//                   >\r\n//                     <option value=\"\">Select Type</option>\r\n//                     <option value=\"full-time\">Full-Time</option>\r\n//                     <option value=\"part-time\">Part-Time</option>\r\n//                     <option value=\"internship\">Internship</option>\r\n//                   </select>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.field}>\r\n//                 <label style={styles.label}>Required Skills</label>\r\n//                 <select\r\n//                   multiple\r\n//                   style={styles.multiselect}\r\n//                   value={skills}\r\n//                   onChange={(e) =>\r\n//                     setSkills(\r\n//                       Array.from(e.target.selectedOptions, (opt) => opt.value)\r\n//                     )\r\n//                   }\r\n//                 >\r\n//                   {availableSkills.map((skill) => (\r\n//                     <option key={skill} value={skill}>\r\n//                       {skill}\r\n//                     </option>\r\n//                   ))}\r\n//                 </select>\r\n//                 <small style={{ color: \"#555\" }}>\r\n//                   Hold Ctrl (Windows) or Cmd (Mac) to select multiple\r\n//                 </small>\r\n//               </div>\r\n\r\n//               <div style={styles.btnRow}>\r\n//                 <button type=\"submit\" style={styles.saveBtn}>\r\n//                   Save\r\n//                 </button>\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   style={styles.cancelBtn}\r\n//                   onClick={() => setShowDialog(false)}\r\n//                 >\r\n//                   Cancel\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const styles = {\r\n//   container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\r\n//   heading: { color: \"#6b3fa0\", textAlign: \"center\" },\r\n//   topBar: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"flex-end\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   addBtn: {\r\n//     background: \"#6b3fa0\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   table: { width: \"100%\", borderCollapse: \"collapse\" },\r\n//   th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\r\n//   td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\r\n//   tr: { textAlign: \"center\" },\r\n//   deleteBtn: {\r\n//     background: \"#ff4d4f\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"5px 10px\",\r\n//     borderRadius: \"6px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   overlay: {\r\n//     position: \"fixed\",\r\n//     top: 0,\r\n//     left: 0,\r\n//     width: \"100vw\",\r\n//     height: \"100vh\",\r\n//     background: \"rgba(0,0,0,0.5)\",\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n//   dialog: {\r\n//     background: \"white\",\r\n//     padding: \"25px\",\r\n//     borderRadius: \"12px\",\r\n//     width: \"600px\",\r\n//     maxHeight: \"90vh\",\r\n//     overflowY: \"auto\",\r\n//   },\r\n//   dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\r\n//   form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\r\n//   row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\r\n//   field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\r\n//   label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n//   multiselect: {\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     height: \"100px\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n//   btnRow: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     marginTop: \"10px\",\r\n//   },\r\n//   saveBtn: {\r\n//     background: \"#6b3fa0\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   cancelBtn: {\r\n//     background: \"#ccc\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n// };\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n\r\n// export default function JobList() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [companies, setCompanies] = useState([]);\r\n//   const [availableSkills] = useState([\r\n//     \"HTML\", \"CSS\", \"JavaScript\", \"React\", \"Node.js\",\r\n//     \"Express\", \"MongoDB\", \"Python\", \"Java\", \"C++\",\r\n//   ]);\r\n\r\n//   // form states\r\n//   const [form, setForm] = useState({\r\n//     title: \"\",\r\n//     description: \"\",\r\n//     companyId: \"\",\r\n//     location: \"\",\r\n//     category: \"\",\r\n//     type: \"\",\r\n//     skills: [],\r\n//   });\r\n\r\n//   const [editingJob, setEditingJob] = useState(null);\r\n//   const [showDialog, setShowDialog] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchJobs();\r\n//     fetchCompanies();\r\n//   }, []);\r\n\r\n//   const fetchJobs = async () => {\r\n//     const res = await API.get(\"/jobs\");\r\n//     setJobs(res.data);\r\n//   };\r\n\r\n//   const fetchCompanies = async () => {\r\n//     const res = await API.get(\"/companies\");\r\n//     setCompanies(res.data);\r\n//   };\r\n\r\n//   const openDialog = (job = null) => {\r\n//     if (job) {\r\n//       setEditingJob(job);\r\n//       setForm({\r\n//         title: job.title,\r\n//         description: job.description,\r\n//         companyId: job.company?._id || \"\",\r\n//         location: job.location || \"\",\r\n//         category: job.category || \"\",\r\n//         type: job.type || \"\",\r\n//         skills: job.skills || [],\r\n//       });\r\n//     } else {\r\n//       setEditingJob(null);\r\n//       setForm({\r\n//         title: \"\",\r\n//         description: \"\",\r\n//         companyId: \"\",\r\n//         location: \"\",\r\n//         category: \"\",\r\n//         type: \"\",\r\n//         skills: [],\r\n//       });\r\n//     }\r\n//     setShowDialog(true);\r\n//   };\r\n\r\n//   const handleChange = (key, value) => {\r\n//     setForm((prev) => ({ ...prev, [key]: value }));\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       if (editingJob) {\r\n//         await API.patch(`/jobs/${editingJob._id}`, form);\r\n//         alert(\"Job updated successfully!\");\r\n//       } else {\r\n//         await API.post(\"/jobs\", form);\r\n//         alert(\"Job added successfully!\");\r\n//       }\r\n//       setShowDialog(false);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(err.response?.data?.message || \"Error saving job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this job?\")) {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       alert(\"Job deleted successfully!\");\r\n//       fetchJobs();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2 style={styles.heading}>Job Management</h2>\r\n\r\n//       <div style={styles.topBar}>\r\n//         <button style={styles.addBtn} onClick={() => openDialog()}>\r\n//           + Add Job\r\n//         </button>\r\n//       </div>\r\n\r\n//       <table style={styles.table}>\r\n//         <thead style={{ background: \"#ede4ff\" }}>\r\n//           <tr>\r\n//             <th style={styles.th}>Title</th>\r\n//             <th style={styles.th}>Description</th>\r\n//             <th style={styles.th}>Company</th>\r\n//             <th style={styles.th}>Location</th>\r\n//             <th style={styles.th}>Category</th>\r\n//             <th style={styles.th}>Type</th>\r\n//             <th style={styles.th}>Skills</th>\r\n//             <th style={styles.th}>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {jobs.map((j) => (\r\n//             <tr key={j._id} style={styles.tr}>\r\n//               <td style={styles.td}>{j.title}</td>\r\n//               <td style={styles.td}>{j.description}</td>\r\n//               <td style={styles.td}>{j.company?.name}</td>\r\n//               <td style={styles.td}>{j.location}</td>\r\n//               <td style={styles.td}>{j.category}</td>\r\n//               <td style={styles.td}>{j.type}</td>\r\n//               <td style={styles.td}>{j.skills?.join(\", \")}</td>\r\n//               <td style={styles.td}>\r\n//                 <button\r\n//                   onClick={() => openDialog(j)}\r\n//                   style={styles.editBtn}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleDelete(j._id)}\r\n//                   style={styles.deleteBtn}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Dialog */}\r\n//       {showDialog && (\r\n//         <div style={styles.overlay}>\r\n//           <div style={styles.dialog}>\r\n//             <h3 style={styles.dialogTitle}>\r\n//               {editingJob ? \"Edit Job\" : \"Add New Job\"}\r\n//             </h3>\r\n//             <form onSubmit={handleSubmit} style={styles.form}>\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Title</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={form.title}\r\n//                     onChange={(e) => handleChange(\"title\", e.target.value)}\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Description</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={form.description}\r\n//                     onChange={(e) =>\r\n//                       handleChange(\"description\", e.target.value)\r\n//                     }\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Company</label>\r\n//                   <select\r\n//                     style={styles.input}\r\n//                     value={form.companyId}\r\n//                     onChange={(e) =>\r\n//                       handleChange(\"companyId\", e.target.value)\r\n//                     }\r\n//                     required\r\n//                   >\r\n//                     <option value=\"\">Select Company</option>\r\n//                     {companies.map((c) => (\r\n//                       <option key={c._id} value={c._id}>\r\n//                         {c.name}\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Location</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={form.location}\r\n//                     onChange={(e) => handleChange(\"location\", e.target.value)}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.row}>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Category</label>\r\n//                   <input\r\n//                     style={styles.input}\r\n//                     value={form.category}\r\n//                     onChange={(e) => handleChange(\"category\", e.target.value)}\r\n//                   />\r\n//                 </div>\r\n//                 <div style={styles.field}>\r\n//                   <label style={styles.label}>Job Type</label>\r\n//                   <select\r\n//                     style={styles.input}\r\n//                     value={form.type}\r\n//                     onChange={(e) => handleChange(\"type\", e.target.value)}\r\n//                   >\r\n//                     <option value=\"\">Select Type</option>\r\n//                     <option value=\"full-time\">Full-Time</option>\r\n//                     <option value=\"part-time\">Part-Time</option>\r\n//                     <option value=\"internship\">Internship</option>\r\n//                   </select>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div style={styles.field}>\r\n//                 <label style={styles.label}>Required Skills</label>\r\n//                 <select\r\n//                   multiple\r\n//                   style={styles.multiselect}\r\n//                   value={form.skills}\r\n//                   onChange={(e) =>\r\n//                     handleChange(\r\n//                       \"skills\",\r\n//                       Array.from(e.target.selectedOptions, (opt) => opt.value)\r\n//                     )\r\n//                   }\r\n//                 >\r\n//                   {availableSkills.map((skill) => (\r\n//                     <option key={skill} value={skill}>\r\n//                       {skill}\r\n//                     </option>\r\n//                   ))}\r\n//                 </select>\r\n//               </div>\r\n\r\n//               <div style={styles.btnRow}>\r\n//                 <button type=\"submit\" style={styles.saveBtn}>\r\n//                   {editingJob ? \"Update\" : \"Save\"}\r\n//                 </button>\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   style={styles.cancelBtn}\r\n//                   onClick={() => setShowDialog(false)}\r\n//                 >\r\n//                   Cancel\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const styles = {\r\n//   container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\r\n//   heading: { color: \"#6b3fa0\", textAlign: \"center\" },\r\n//   topBar: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"flex-end\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   addBtn: {\r\n//     background: \"#6b3fa0\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   editBtn: {\r\n//     background: \"#4caf50\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"6px 10px\",\r\n//     borderRadius: \"6px\",\r\n//     marginRight: \"5px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   deleteBtn: {\r\n//     background: \"#ff4d4f\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"6px 10px\",\r\n//     borderRadius: \"6px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   table: { width: \"100%\", borderCollapse: \"collapse\" },\r\n//   th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\r\n//   td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\r\n//   tr: { textAlign: \"center\" },\r\n//   overlay: {\r\n//     position: \"fixed\",\r\n//     top: 0,\r\n//     left: 0,\r\n//     width: \"100vw\",\r\n//     height: \"100vh\",\r\n//     background: \"rgba(0,0,0,0.5)\",\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n//   dialog: {\r\n//     background: \"white\",\r\n//     padding: \"25px\",\r\n//     borderRadius: \"12px\",\r\n//     width: \"600px\",\r\n//     maxHeight: \"90vh\",\r\n//     overflowY: \"auto\",\r\n//   },\r\n//   dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\r\n//   form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\r\n//   row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\r\n//   field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\r\n//   label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n//   multiselect: {\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     height: \"100px\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n//   btnRow: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     marginTop: \"10px\",\r\n//   },\r\n//   saveBtn: {\r\n//     background: \"#6b3fa0\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   cancelBtn: {\r\n//     background: \"#ccc\",\r\n//     border: \"none\",\r\n//     padding: \"10px 18px\",\r\n//     borderRadius: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n// };\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport API from \"../api\";\r\n\r\nexport default function JobList() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [skills, setSkills] = useState([]);\r\n\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    companyId: \"\",\r\n    location: \"\",\r\n    category: \"\",\r\n    type: \"\",\r\n    skills: [],\r\n  });\r\n\r\n  const [editingJob, setEditingJob] = useState(null);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n    fetchCompanies();\r\n    fetchSkills();\r\n  }, []);\r\n\r\n  const fetchJobs = async () => {\r\n    const res = await API.get(\"/jobs\");\r\n    setJobs(res.data);\r\n  };\r\n\r\n  const fetchCompanies = async () => {\r\n    const res = await API.get(\"/companies\");\r\n    setCompanies(res.data);\r\n  };\r\n\r\n  const fetchSkills = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await API.get(\"/skills/list\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setSkills(res.data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching skills:\", err);\r\n    }\r\n  };\r\n\r\n  const openDialog = (job = null) => {\r\n    if (job) {\r\n      setEditingJob(job);\r\n      setForm({\r\n        title: job.title,\r\n        description: job.description,\r\n        companyId: job.company?._id || \"\",\r\n        location: job.location || \"\",\r\n        category: job.category || \"\",\r\n        type: job.type || \"\",\r\n        skills: job.skills?.map((s) => (s._id ? s._id : s)) || [],\r\n      });\r\n    } else {\r\n      setEditingJob(null);\r\n      setForm({\r\n        title: \"\",\r\n        description: \"\",\r\n        companyId: \"\",\r\n        location: \"\",\r\n        category: \"\",\r\n        type: \"\",\r\n        skills: [],\r\n      });\r\n    }\r\n    setShowDialog(true);\r\n  };\r\n\r\n  const handleChange = (key, value) => {\r\n    setForm((prev) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const handleSkillChange = (e) => {\r\n    const selected = Array.from(e.target.selectedOptions, (opt) => opt.value);\r\n    handleChange(\"skills\", selected);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingJob) {\r\n        await API.patch(`/jobs/${editingJob._id}`, form);\r\n        alert(\"Job updated successfully!\");\r\n      } else {\r\n        await API.post(\"/jobs\", form);\r\n        alert(\"Job added successfully!\");\r\n      }\r\n      setShowDialog(false);\r\n      fetchJobs();\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Error saving job\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this job?\")) {\r\n      await API.delete(`/jobs/${id}`);\r\n      alert(\"Job deleted successfully!\");\r\n      fetchJobs();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Job Management</h2>\r\n\r\n      <div style={styles.topBar}>\r\n        <button style={styles.addBtn} onClick={() => openDialog()}>\r\n          + Add Job\r\n        </button>\r\n      </div>\r\n\r\n      <table style={styles.table}>\r\n        <thead style={{ background: \"#ede4ff\" }}>\r\n          <tr>\r\n            <th style={styles.th}>Title</th>\r\n            <th style={styles.th}>Description</th>\r\n            <th style={styles.th}>Company</th>\r\n            <th style={styles.th}>Location</th>\r\n            <th style={styles.th}>Category</th>\r\n            <th style={styles.th}>Type</th>\r\n            <th style={styles.th}>Skills</th>\r\n            <th style={styles.th}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobs.map((j) => (\r\n            <tr key={j._id} style={styles.tr}>\r\n              <td style={styles.td}>{j.title}</td>\r\n              <td style={styles.td}>{j.description}</td>\r\n              <td style={styles.td}>{j.company?.name}</td>\r\n              <td style={styles.td}>{j.location}</td>\r\n              <td style={styles.td}>{j.category}</td>\r\n              <td style={styles.td}>{j.type}</td>\r\n              <td style={styles.td}>\r\n                {Array.isArray(j.skills)\r\n                  ? j.skills\r\n                      .map((s) => (typeof s === \"object\" ? s.name : s))\r\n                      .join(\", \")\r\n                  : \"\"}\r\n              </td>\r\n              <td style={styles.td}>\r\n                <button onClick={() => openDialog(j)} style={styles.editBtn}>\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDelete(j._id)}\r\n                  style={styles.deleteBtn}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Dialog Box */}\r\n      {showDialog && (\r\n        <div style={styles.overlay}>\r\n          <div style={styles.dialog}>\r\n            <h3 style={styles.dialogTitle}>\r\n              {editingJob ? \"Edit Job\" : \"Add New Job\"}\r\n            </h3>\r\n\r\n            <form onSubmit={handleSubmit} style={styles.form}>\r\n              {/* Title + Description */}\r\n              <div style={styles.row}>\r\n                <div style={styles.field}>\r\n                  <label style={styles.label}>Title</label>\r\n                  <input\r\n                    style={styles.input}\r\n                    value={form.title}\r\n                    onChange={(e) => handleChange(\"title\", e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div style={styles.field}>\r\n                  <label style={styles.label}>Description</label>\r\n                  <input\r\n                    style={styles.input}\r\n                    value={form.description}\r\n                    onChange={(e) =>\r\n                      handleChange(\"description\", e.target.value)\r\n                    }\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Company + Location */}\r\n              <div style={styles.row}>\r\n                <div style={styles.field}>\r\n                  <label style={styles.label}>Company</label>\r\n                  <select\r\n                    style={styles.input}\r\n                    value={form.companyId}\r\n                    onChange={(e) => handleChange(\"companyId\", e.target.value)}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Company</option>\r\n                    {companies.map((c) => (\r\n                      <option key={c._id} value={c._id}>\r\n                        {c.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div style={styles.field}>\r\n                  <label style={styles.label}>Location</label>\r\n                  <input\r\n                    style={styles.input}\r\n                    value={form.location}\r\n                    onChange={(e) => handleChange(\"location\", e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Category + Type */}\r\n              <div style={styles.row}>\r\n                <div style={styles.field}>\r\n                  <label style={styles.label}>Category</label>\r\n                  <input\r\n                    style={styles.input}\r\n                    value={form.category}\r\n                    onChange={(e) => handleChange(\"category\", e.target.value)}\r\n                  />\r\n                </div>\r\n                <div style={styles.field}>\r\n                  <label style={styles.label}>Job Type</label>\r\n                  <select\r\n                    style={styles.input}\r\n                    value={form.type}\r\n                    onChange={(e) => handleChange(\"type\", e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Type</option>\r\n                    <option value=\"full-time\">Full-Time</option>\r\n                    <option value=\"part-time\">Part-Time</option>\r\n                    <option value=\"internship\">Internship</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Skills Dropdown */}\r\n              <div style={styles.field}>\r\n                <label style={styles.label}>Required Skills</label>\r\n                <select\r\n                  multiple\r\n                  style={styles.multiselect}\r\n                  value={form.skills}\r\n                  onChange={handleSkillChange}\r\n                >\r\n                  {skills.map((skill) => (\r\n                    <option key={skill._id} value={skill._id}>\r\n                      {skill.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <small style={{ color: \"#555\" }}>\r\n                  Hold Ctrl (Windows) or Cmd (Mac) to select multiple\r\n                </small>\r\n              </div>\r\n\r\n              <div style={styles.btnRow}>\r\n                <button type=\"submit\" style={styles.saveBtn}>\r\n                  {editingJob ? \"Update\" : \"Save\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  style={styles.cancelBtn}\r\n                  onClick={() => setShowDialog(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: { padding: \"20px\", fontFamily: \"Arial, sans-serif\" },\r\n  heading: { color: \"#6b3fa0\", textAlign: \"center\" },\r\n  topBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  addBtn: {\r\n    background: \"#6b3fa0\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"10px 18px\",\r\n    borderRadius: \"8px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  editBtn: {\r\n    background: \"#4caf50\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"6px 10px\",\r\n    borderRadius: \"6px\",\r\n    marginRight: \"5px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  deleteBtn: {\r\n    background: \"#ff4d4f\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"6px 10px\",\r\n    borderRadius: \"6px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  table: { width: \"100%\", borderCollapse: \"collapse\" },\r\n  th: { padding: \"10px\", borderBottom: \"2px solid #ccc\" },\r\n  td: { padding: \"10px\", borderBottom: \"1px solid #ddd\" },\r\n  tr: { textAlign: \"center\" },\r\n  overlay: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    background: \"rgba(0,0,0,0.5)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  dialog: {\r\n    background: \"white\",\r\n    padding: \"25px\",\r\n    borderRadius: \"12px\",\r\n    width: \"600px\",\r\n    maxHeight: \"90vh\",\r\n    overflowY: \"auto\",\r\n  },\r\n  dialogTitle: { textAlign: \"center\", color: \"#6b3fa0\", marginBottom: \"15px\" },\r\n  form: { display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\r\n  row: { display: \"flex\", gap: \"15px\", flexWrap: \"wrap\" },\r\n  field: { flex: 1, display: \"flex\", flexDirection: \"column\" },\r\n  label: { fontWeight: \"bold\", marginBottom: \"5px\", color: \"#333\" },\r\n  input: {\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid #ccc\",\r\n    fontSize: \"14px\",\r\n  },\r\n  multiselect: {\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid #ccc\",\r\n    height: \"120px\",\r\n    fontSize: \"14px\",\r\n  },\r\n  btnRow: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: \"10px\",\r\n  },\r\n  saveBtn: {\r\n    background: \"#6b3fa0\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"10px 18px\",\r\n    borderRadius: \"8px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  cancelBtn: {\r\n    background: \"#ccc\",\r\n    border: \"none\",\r\n    padding: \"10px 18px\",\r\n    borderRadius: \"8px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n  },\r\n};\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}