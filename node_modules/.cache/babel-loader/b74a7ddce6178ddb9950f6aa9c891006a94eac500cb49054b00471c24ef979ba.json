{"ast":null,"code":"\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function Jobs() {\n//   const [jobs, setJobs] = useState([]);\n//   const [filteredJobs, setFilteredJobs] = useState([]);\n//   const [q, setQ] = useState(\"\");\n\n//   // Filter states\n//   const [jobType, setJobType] = useState(\"\");\n//   const [minSalary, setMinSalary] = useState(\"\");\n//   const [maxSalary, setMaxSalary] = useState(\"\");\n\n//   useEffect(() => {\n//     load();\n//   }, []);\n\n//   const load = async () => {\n//     try {\n//       const res = await API.get(\"/jobs\");\n//       setJobs(res.data);\n//       setFilteredJobs(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch jobs:\", err);\n//     }\n//   };\n\n//   // Apply filters and search dynamically\n//   useEffect(() => {\n//     applyFilters();\n//   }, [q, jobType, minSalary, maxSalary, jobs]);\n\n//   const applyFilters = () => {\n//     let result = [...jobs];\n\n//     const searchTerm = q.toLowerCase().trim();\n//     if (searchTerm) {\n//       result = result.filter((job) => {\n//         const title = job.title?.toLowerCase() || \"\";\n//         const company = job.company?.name?.toLowerCase() || \"\";\n//         const location = job.location?.toLowerCase() || \"\";\n//         return (\n//           title.includes(searchTerm) ||\n//           company.includes(searchTerm) ||\n//           location.includes(searchTerm)\n//         );\n//       });\n//     }\n\n//     if (jobType) {\n//       result = result.filter(\n//         (job) => job.type?.toLowerCase() === jobType.toLowerCase()\n//       );\n//     }\n\n//     if (minSalary || maxSalary) {\n//       result = result.filter((job) => {\n//         const salary = job.salary || 0;\n//         if (minSalary && salary < parseInt(minSalary)) return false;\n//         if (maxSalary && salary > parseInt(maxSalary)) return false;\n//         return true;\n//       });\n//     }\n\n//     setFilteredJobs(result);\n//   };\n\n//   const clearFilters = () => {\n//     setQ(\"\");\n//     setJobType(\"\");\n//     setMinSalary(\"\");\n//     setMaxSalary(\"\");\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"navbar\">Job Tracker</div>\n\n//       <div\n//         className=\"container\"\n//         style={{\n//           display: \"grid\",\n//           gridTemplateColumns: \"300px 1fr\",\n//           gap: \"20px\",\n//           alignItems: \"start\",\n//           maxWidth:\"100%\",\n//           margin:'52px 41px'\n//         }}\n//       >\n//         {/* Filter Sidebar (LEFT SIDE) */}\n//         <div className=\"card\" style={{ padding: \"15px\" }}>\n//           <h4>Filter Jobs</h4>\n\n//           {/* Job Type */}\n//           <div style={{ marginTop: 10 }}>\n//             <label style={{ fontWeight: 600 }}>Job Type:</label>\n//             <select\n//               value={jobType}\n//               onChange={(e) => setJobType(e.target.value)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"8px\",\n//                 marginTop: \"5px\",\n//                 borderRadius: \"4px\",\n//               }}\n//             >\n//               <option value=\"\">All</option>\n//               <option value=\"Full-time\">Full Time</option>\n//               <option value=\"Part-time\">Part Time</option>\n//               <option value=\"Internship\">Internship</option>\n//               <option value=\"Remote\">Remote</option>\n//             </select>\n//           </div>\n\n//           {/* Salary Range */}\n//           <div style={{ marginTop: 10 }}>\n//             <label style={{ fontWeight: 600 }}>Salary Range (â‚¹):</label>\n//             <div style={{ display: \"flex\", gap: \"5px\", marginTop: \"5px\" }}>\n//               <input\n//                 type=\"number\"\n//                 placeholder=\"Min\"\n//                 value={minSalary}\n//                 onChange={(e) => setMinSalary(e.target.value)}\n//                 style={{ flex: 1, padding: \"6px\", width:\"30px\" }}\n//               />\n//               <input\n//                 type=\"number\"\n//                 placeholder=\"Max\"\n//                 value={maxSalary}\n//                 onChange={(e) => setMaxSalary(e.target.value)}\n//                 style={{ flex: 1, padding: \"6px\", width:\"30px\" }}\n//               />\n//             </div>\n//           </div>\n\n//           {/* Clear Filters */}\n//           <button\n//             className=\"btn\"\n//             onClick={clearFilters}\n//             style={{\n//               marginTop: 15,\n//               width: \"100%\",\n//               background: \"#6b21a8\",\n//               color: \"white\",\n//               padding: \"8px\",\n//               border: \"none\",\n//               borderRadius: \"4px\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Clear Filters\n//           </button>\n//         </div>\n\n//         {/* âœ… Main Job List Section (RIGHT SIDE) */}\n//         <div>\n//           <h2>Jobs</h2>\n\n//           {/* Search Bar */}\n//           <div\n//             className=\"card\"\n//             style={{\n//               display: \"flex\",\n//               alignItems: \"center\",\n//               marginBottom: 12,\n//               padding: \"8px\",\n//             }}\n//           >\n//             <input\n//               placeholder=\"Search by title, company, or location\"\n//               value={q}\n//               onChange={(e) => setQ(e.target.value)}\n//               style={{ flex: 1, padding: \"8px\" }}\n//             />\n//           </div>\n\n//           {/* Job Cards */}\n//           <div\n//             style={{\n//               display: \"grid\",\n//               gridTemplateColumns: \"repeat(auto-fit,minmax(280px,1fr))\",\n//               gap: 12,\n//             }}\n//           >\n//             {filteredJobs.length === 0 ? (\n//               <div>No jobs found</div>\n//             ) : (\n//               filteredJobs.map((j) => (\n//                 <div className=\"card\" key={j._id}>\n//                   <h3 style={{ color: \"#6b21a8\" }}>{j.title}</h3>\n//                   <div style={{ fontSize: 13, color: \"#666\" }}>\n//                     {j.company?.name} â€¢ {j.location} â€¢ {j.type}\n//                   </div>\n//                   {j.salary && (\n//                     <div style={{ fontSize: 13, color: \"#333\" }}>\n//                       ðŸ’° Salary: â‚¹{j.salary}\n//                     </div>\n//                   )}\n//                   <p>{j.description?.slice(0, 200)}...</p>\n\n//                   {/* Skills */}\n//                   <div style={{ marginTop: 8 }}>\n//                     <strong>Skills:</strong>{\" \"}\n//                     {Array.isArray(j.skills) && j.skills.length > 0\n//                       ? j.skills.map((s) => s.name).join(\", \")\n//                       : \"No skills listed\"}\n//                   </div>\n//                 </div>\n//               ))\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/aswathi/Downloads/job-tracker/job-tracker/client/src/pages/Jobs.js"],"sourcesContent":["\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function Jobs() {\n//   const [jobs, setJobs] = useState([]);\n//   const [filteredJobs, setFilteredJobs] = useState([]);\n//   const [q, setQ] = useState(\"\");\n\n//   // Filter states\n//   const [jobType, setJobType] = useState(\"\");\n//   const [minSalary, setMinSalary] = useState(\"\");\n//   const [maxSalary, setMaxSalary] = useState(\"\");\n\n//   useEffect(() => {\n//     load();\n//   }, []);\n\n//   const load = async () => {\n//     try {\n//       const res = await API.get(\"/jobs\");\n//       setJobs(res.data);\n//       setFilteredJobs(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch jobs:\", err);\n//     }\n//   };\n\n//   // Apply filters and search dynamically\n//   useEffect(() => {\n//     applyFilters();\n//   }, [q, jobType, minSalary, maxSalary, jobs]);\n\n//   const applyFilters = () => {\n//     let result = [...jobs];\n\n//     const searchTerm = q.toLowerCase().trim();\n//     if (searchTerm) {\n//       result = result.filter((job) => {\n//         const title = job.title?.toLowerCase() || \"\";\n//         const company = job.company?.name?.toLowerCase() || \"\";\n//         const location = job.location?.toLowerCase() || \"\";\n//         return (\n//           title.includes(searchTerm) ||\n//           company.includes(searchTerm) ||\n//           location.includes(searchTerm)\n//         );\n//       });\n//     }\n\n//     if (jobType) {\n//       result = result.filter(\n//         (job) => job.type?.toLowerCase() === jobType.toLowerCase()\n//       );\n//     }\n\n//     if (minSalary || maxSalary) {\n//       result = result.filter((job) => {\n//         const salary = job.salary || 0;\n//         if (minSalary && salary < parseInt(minSalary)) return false;\n//         if (maxSalary && salary > parseInt(maxSalary)) return false;\n//         return true;\n//       });\n//     }\n\n//     setFilteredJobs(result);\n//   };\n\n//   const clearFilters = () => {\n//     setQ(\"\");\n//     setJobType(\"\");\n//     setMinSalary(\"\");\n//     setMaxSalary(\"\");\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"navbar\">Job Tracker</div>\n\n//       <div\n//         className=\"container\"\n//         style={{\n//           display: \"grid\",\n//           gridTemplateColumns: \"300px 1fr\",\n//           gap: \"20px\",\n//           alignItems: \"start\",\n//           maxWidth:\"100%\",\n//           margin:'52px 41px'\n//         }}\n//       >\n//         {/* Filter Sidebar (LEFT SIDE) */}\n//         <div className=\"card\" style={{ padding: \"15px\" }}>\n//           <h4>Filter Jobs</h4>\n\n//           {/* Job Type */}\n//           <div style={{ marginTop: 10 }}>\n//             <label style={{ fontWeight: 600 }}>Job Type:</label>\n//             <select\n//               value={jobType}\n//               onChange={(e) => setJobType(e.target.value)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"8px\",\n//                 marginTop: \"5px\",\n//                 borderRadius: \"4px\",\n//               }}\n//             >\n//               <option value=\"\">All</option>\n//               <option value=\"Full-time\">Full Time</option>\n//               <option value=\"Part-time\">Part Time</option>\n//               <option value=\"Internship\">Internship</option>\n//               <option value=\"Remote\">Remote</option>\n//             </select>\n//           </div>\n\n//           {/* Salary Range */}\n//           <div style={{ marginTop: 10 }}>\n//             <label style={{ fontWeight: 600 }}>Salary Range (â‚¹):</label>\n//             <div style={{ display: \"flex\", gap: \"5px\", marginTop: \"5px\" }}>\n//               <input\n//                 type=\"number\"\n//                 placeholder=\"Min\"\n//                 value={minSalary}\n//                 onChange={(e) => setMinSalary(e.target.value)}\n//                 style={{ flex: 1, padding: \"6px\", width:\"30px\" }}\n//               />\n//               <input\n//                 type=\"number\"\n//                 placeholder=\"Max\"\n//                 value={maxSalary}\n//                 onChange={(e) => setMaxSalary(e.target.value)}\n//                 style={{ flex: 1, padding: \"6px\", width:\"30px\" }}\n//               />\n//             </div>\n//           </div>\n\n//           {/* Clear Filters */}\n//           <button\n//             className=\"btn\"\n//             onClick={clearFilters}\n//             style={{\n//               marginTop: 15,\n//               width: \"100%\",\n//               background: \"#6b21a8\",\n//               color: \"white\",\n//               padding: \"8px\",\n//               border: \"none\",\n//               borderRadius: \"4px\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Clear Filters\n//           </button>\n//         </div>\n\n//         {/* âœ… Main Job List Section (RIGHT SIDE) */}\n//         <div>\n//           <h2>Jobs</h2>\n\n//           {/* Search Bar */}\n//           <div\n//             className=\"card\"\n//             style={{\n//               display: \"flex\",\n//               alignItems: \"center\",\n//               marginBottom: 12,\n//               padding: \"8px\",\n//             }}\n//           >\n//             <input\n//               placeholder=\"Search by title, company, or location\"\n//               value={q}\n//               onChange={(e) => setQ(e.target.value)}\n//               style={{ flex: 1, padding: \"8px\" }}\n//             />\n//           </div>\n\n//           {/* Job Cards */}\n//           <div\n//             style={{\n//               display: \"grid\",\n//               gridTemplateColumns: \"repeat(auto-fit,minmax(280px,1fr))\",\n//               gap: 12,\n//             }}\n//           >\n//             {filteredJobs.length === 0 ? (\n//               <div>No jobs found</div>\n//             ) : (\n//               filteredJobs.map((j) => (\n//                 <div className=\"card\" key={j._id}>\n//                   <h3 style={{ color: \"#6b21a8\" }}>{j.title}</h3>\n//                   <div style={{ fontSize: 13, color: \"#666\" }}>\n//                     {j.company?.name} â€¢ {j.location} â€¢ {j.type}\n//                   </div>\n//                   {j.salary && (\n//                     <div style={{ fontSize: 13, color: \"#333\" }}>\n//                       ðŸ’° Salary: â‚¹{j.salary}\n//                     </div>\n//                   )}\n//                   <p>{j.description?.slice(0, 200)}...</p>\n\n//                   {/* Skills */}\n//                   <div style={{ marginTop: 8 }}>\n//                     <strong>Skills:</strong>{\" \"}\n//                     {Array.isArray(j.skills) && j.skills.length > 0\n//                       ? j.skills.map((s) => s.name).join(\", \")\n//                       : \"No skills listed\"}\n//                   </div>\n//                 </div>\n//               ))\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}