{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function Jobs() {\n//   const [jobs, setJobs] = useState([]);\n//   const [q, setQ] = useState(\"\");\n//   const [filteredJobs, setFilteredJobs] = useState([]);\n\n//   useEffect(() => {\n//     load();\n//   }, []);\n\n//   // Load all jobs from API\n//   const load = async () => {\n//     try {\n//       const res = await API.get(\"/jobs\");\n//       setJobs(res.data);\n//       setFilteredJobs(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch jobs:\", err);\n//     }\n//   };\n\n//   // Handle search (by job title or company name)\n//   const handleSearch = () => {\n//     const searchTerm = q.toLowerCase().trim();\n//     if (!searchTerm) {\n//       setFilteredJobs(jobs);\n//       return;\n//     }\n//     const filtered = jobs.filter((job) => {\n//       const title = job.title?.toLowerCase() || \"\";\n//       const company = job.company?.name?.toLowerCase() || \"\";\n//       return title.includes(searchTerm) || company.includes(searchTerm);\n//     });\n//     setFilteredJobs(filtered);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"navbar\">Job Tracker</div>\n//       <div className=\"container\">\n//         <h2>Jobs</h2>\n\n//         {/* Search bar */}\n//         <div className=\"card\" style={{ display: \"flex\", alignItems: \"center\" }}>\n//           <input\n//             placeholder=\"Search by job or company\"\n//             value={q}\n//             onChange={(e) => setQ(e.target.value)}\n//             style={{ flex: 1, padding: \"8px\" }}\n//           />\n//           <button\n//             className=\"btn\"\n//             style={{ marginLeft: 8 }}\n//             onClick={handleSearch}\n//           >\n//             Search\n//           </button>\n//         </div>\n\n//         {/* Job cards */}\n//         <div\n//           style={{\n//             marginTop: 12,\n//             display: \"grid\",\n//             gridTemplateColumns: \"repeat(auto-fit,minmax(280px,1fr))\",\n//             gap: 12,\n//           }}\n//         >\n//           {filteredJobs.length === 0 ? (\n//             <div>No jobs found</div>\n//           ) : (\n//             filteredJobs.map((j) => (\n//               <div className=\"card\" key={j._id}>\n//                 <h3 style={{ color: \"#6b21a8\" }}>{j.title}</h3>\n//                 <div style={{ fontSize: 13, color: \"#666\" }}>\n//                   {j.company?.name} • {j.location} • {j.type}\n//                 </div>\n//                 <p>{j.description?.slice(0, 200)}...</p>\n\n//                 {/* Skills fix */}\n//                 <div style={{ marginTop: 8 }}>\n//                   <strong>Skills:</strong>{\" \"}\n//                   {Array.isArray(j.skills) && j.skills.length > 0\n//                     ? j.skills.map((s) => s.name).join(\", \")\n//                     : \"No skills listed\"}\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/aswathi/Downloads/job-tracker/job-tracker/client/src/pages/Jobs.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n\n// export default function Jobs() {\n//   const [jobs, setJobs] = useState([]);\n//   const [q, setQ] = useState(\"\");\n//   const [filteredJobs, setFilteredJobs] = useState([]);\n\n//   useEffect(() => {\n//     load();\n//   }, []);\n\n//   // Load all jobs from API\n//   const load = async () => {\n//     try {\n//       const res = await API.get(\"/jobs\");\n//       setJobs(res.data);\n//       setFilteredJobs(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch jobs:\", err);\n//     }\n//   };\n\n//   // Handle search (by job title or company name)\n//   const handleSearch = () => {\n//     const searchTerm = q.toLowerCase().trim();\n//     if (!searchTerm) {\n//       setFilteredJobs(jobs);\n//       return;\n//     }\n//     const filtered = jobs.filter((job) => {\n//       const title = job.title?.toLowerCase() || \"\";\n//       const company = job.company?.name?.toLowerCase() || \"\";\n//       return title.includes(searchTerm) || company.includes(searchTerm);\n//     });\n//     setFilteredJobs(filtered);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"navbar\">Job Tracker</div>\n//       <div className=\"container\">\n//         <h2>Jobs</h2>\n\n//         {/* Search bar */}\n//         <div className=\"card\" style={{ display: \"flex\", alignItems: \"center\" }}>\n//           <input\n//             placeholder=\"Search by job or company\"\n//             value={q}\n//             onChange={(e) => setQ(e.target.value)}\n//             style={{ flex: 1, padding: \"8px\" }}\n//           />\n//           <button\n//             className=\"btn\"\n//             style={{ marginLeft: 8 }}\n//             onClick={handleSearch}\n//           >\n//             Search\n//           </button>\n//         </div>\n\n//         {/* Job cards */}\n//         <div\n//           style={{\n//             marginTop: 12,\n//             display: \"grid\",\n//             gridTemplateColumns: \"repeat(auto-fit,minmax(280px,1fr))\",\n//             gap: 12,\n//           }}\n//         >\n//           {filteredJobs.length === 0 ? (\n//             <div>No jobs found</div>\n//           ) : (\n//             filteredJobs.map((j) => (\n//               <div className=\"card\" key={j._id}>\n//                 <h3 style={{ color: \"#6b21a8\" }}>{j.title}</h3>\n//                 <div style={{ fontSize: 13, color: \"#666\" }}>\n//                   {j.company?.name} • {j.location} • {j.type}\n//                 </div>\n//                 <p>{j.description?.slice(0, 200)}...</p>\n\n//                 {/* Skills fix */}\n//                 <div style={{ marginTop: 8 }}>\n//                   <strong>Skills:</strong>{\" \"}\n//                   {Array.isArray(j.skills) && j.skills.length > 0\n//                     ? j.skills.map((s) => s.name).join(\", \")\n//                     : \"No skills listed\"}\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}